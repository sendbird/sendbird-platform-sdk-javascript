/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendbirdPlatformSdk);
  }
}(this, function(expect, SendbirdPlatformSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendbirdPlatformSdk.MessageApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MessageApi', function() {
    describe('addExtraDataToAMessage', function() {
      it('should call addExtraDataToAMessage successfully', function(done) {
        //uncomment below and update the code to test addExtraDataToAMessage
        //instance.addExtraDataToAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAMessage', function() {
      it('should call deleteAMessage successfully', function(done) {
        //uncomment below and update the code to test deleteAMessage
        //instance.deleteAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAMessage', function() {
      it('should call getAMessage successfully', function(done) {
        //uncomment below and update the code to test getAMessage
        //instance.getAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTotalNumberOfMessagesInAChannel', function() {
      it('should call getTotalNumberOfMessagesInAChannel successfully', function(done) {
        //uncomment below and update the code to test getTotalNumberOfMessagesInAChannel
        //instance.getTotalNumberOfMessagesInAChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMessages', function() {
      it('should call listMessages successfully', function(done) {
        //uncomment below and update the code to test listMessages
        //instance.listMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markChannelMessagesAsRead', function() {
      it('should call markChannelMessagesAsRead successfully', function(done) {
        //uncomment below and update the code to test markChannelMessagesAsRead
        //instance.markChannelMessagesAsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('migrateMessages', function() {
      it('should call migrateMessages successfully', function(done) {
        //uncomment below and update the code to test migrateMessages
        //instance.migrateMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeExtraDataFromAMessage', function() {
      it('should call removeExtraDataFromAMessage successfully', function(done) {
        //uncomment below and update the code to test removeExtraDataFromAMessage
        //instance.removeExtraDataFromAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendAMessage', function() {
      it('should call sendAMessage successfully', function(done) {
        //uncomment below and update the code to test sendAMessage
        //instance.sendAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAMessage', function() {
      it('should call updateAMessage successfully', function(done) {
        //uncomment below and update the code to test updateAMessage
        //instance.updateAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateExtraDataInAMessage', function() {
      it('should call updateExtraDataInAMessage successfully', function(done) {
        //uncomment below and update the code to test updateExtraDataInAMessage
        //instance.updateExtraDataInAMessage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
