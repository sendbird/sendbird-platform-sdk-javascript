/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendbirdPlatformSdk);
  }
}(this, function(expect, SendbirdPlatformSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendbirdPlatformSdk.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('addRegistrationOrDeviceToken', function() {
      it('should call addRegistrationOrDeviceToken successfully', function(done) {
        //uncomment below and update the code to test addRegistrationOrDeviceToken
        //instance.addRegistrationOrDeviceToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('choosePushNotificationContentTemplate', function() {
      it('should call choosePushNotificationContentTemplate successfully', function(done) {
        //uncomment below and update the code to test choosePushNotificationContentTemplate
        //instance.choosePushNotificationContentTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserById', function() {
      it('should call deleteUserById successfully', function(done) {
        //uncomment below and update the code to test deleteUserById
        //instance.deleteUserById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leaveMyGroupChannels', function() {
      it('should call leaveMyGroupChannels successfully', function(done) {
        //uncomment below and update the code to test leaveMyGroupChannels
        //instance.leaveMyGroupChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMyGroupChannels', function() {
      it('should call listMyGroupChannels successfully', function(done) {
        //uncomment below and update the code to test listMyGroupChannels
        //instance.listMyGroupChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRegistrationOrDeviceTokens', function() {
      it('should call listRegistrationOrDeviceTokens successfully', function(done) {
        //uncomment below and update the code to test listRegistrationOrDeviceTokens
        //instance.listRegistrationOrDeviceTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsers', function() {
      it('should call listUsers successfully', function(done) {
        //uncomment below and update the code to test listUsers
        //instance.listUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markAllMessagesAsRead', function() {
      it('should call markAllMessagesAsRead successfully', function(done) {
        //uncomment below and update the code to test markAllMessagesAsRead
        //instance.markAllMessagesAsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerAsOperatorToChannelsWithCustomChannelTypes', function() {
      it('should call registerAsOperatorToChannelsWithCustomChannelTypes successfully', function(done) {
        //uncomment below and update the code to test registerAsOperatorToChannelsWithCustomChannelTypes
        //instance.registerAsOperatorToChannelsWithCustomChannelTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeRegistrationOrDeviceToken', function() {
      it('should call removeRegistrationOrDeviceToken successfully', function(done) {
        //uncomment below and update the code to test removeRegistrationOrDeviceToken
        //instance.removeRegistrationOrDeviceToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeRegistrationOrDeviceTokenByToken', function() {
      it('should call removeRegistrationOrDeviceTokenByToken successfully', function(done) {
        //uncomment below and update the code to test removeRegistrationOrDeviceTokenByToken
        //instance.removeRegistrationOrDeviceTokenByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeRegistrationOrDeviceTokenFromOwnerByToken', function() {
      it('should call removeRegistrationOrDeviceTokenFromOwnerByToken successfully', function(done) {
        //uncomment below and update the code to test removeRegistrationOrDeviceTokenFromOwnerByToken
        //instance.removeRegistrationOrDeviceTokenFromOwnerByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetPushPreferences', function() {
      it('should call resetPushPreferences successfully', function(done) {
        //uncomment below and update the code to test resetPushPreferences
        //instance.resetPushPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChannelInvitationPreference', function() {
      it('should call updateChannelInvitationPreference successfully', function(done) {
        //uncomment below and update the code to test updateChannelInvitationPreference
        //instance.updateChannelInvitationPreference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCountPreferenceOfChannelByUrl', function() {
      it('should call updateCountPreferenceOfChannelByUrl successfully', function(done) {
        //uncomment below and update the code to test updateCountPreferenceOfChannelByUrl
        //instance.updateCountPreferenceOfChannelByUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePushPreferences', function() {
      it('should call updatePushPreferences successfully', function(done) {
        //uncomment below and update the code to test updatePushPreferences
        //instance.updatePushPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePushPreferencesForChannelByUrl', function() {
      it('should call updatePushPreferencesForChannelByUrl successfully', function(done) {
        //uncomment below and update the code to test updatePushPreferencesForChannelByUrl
        //instance.updatePushPreferencesForChannelByUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserById', function() {
      it('should call updateUserById successfully', function(done) {
        //uncomment below and update the code to test updateUserById
        //instance.updateUserById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewChannelInvitationPreference', function() {
      it('should call viewChannelInvitationPreference successfully', function(done) {
        //uncomment below and update the code to test viewChannelInvitationPreference
        //instance.viewChannelInvitationPreference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewCountPreferenceOfChannelByUrl', function() {
      it('should call viewCountPreferenceOfChannelByUrl successfully', function(done) {
        //uncomment below and update the code to test viewCountPreferenceOfChannelByUrl
        //instance.viewCountPreferenceOfChannelByUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewNumberOfChannelsByJoinStatus', function() {
      it('should call viewNumberOfChannelsByJoinStatus successfully', function(done) {
        //uncomment below and update the code to test viewNumberOfChannelsByJoinStatus
        //instance.viewNumberOfChannelsByJoinStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewNumberOfChannelsWithUnreadMessages', function() {
      it('should call viewNumberOfChannelsWithUnreadMessages successfully', function(done) {
        //uncomment below and update the code to test viewNumberOfChannelsWithUnreadMessages
        //instance.viewNumberOfChannelsWithUnreadMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewNumberOfUnreadItems', function() {
      it('should call viewNumberOfUnreadItems successfully', function(done) {
        //uncomment below and update the code to test viewNumberOfUnreadItems
        //instance.viewNumberOfUnreadItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewNumberOfUnreadMessages', function() {
      it('should call viewNumberOfUnreadMessages successfully', function(done) {
        //uncomment below and update the code to test viewNumberOfUnreadMessages
        //instance.viewNumberOfUnreadMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewPushPreferences', function() {
      it('should call viewPushPreferences successfully', function(done) {
        //uncomment below and update the code to test viewPushPreferences
        //instance.viewPushPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewPushPreferencesForChannelByUrl', function() {
      it('should call viewPushPreferencesForChannelByUrl successfully', function(done) {
        //uncomment below and update the code to test viewPushPreferencesForChannelByUrl
        //instance.viewPushPreferencesForChannelByUrl(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewUserById', function() {
      it('should call viewUserById successfully', function(done) {
        //uncomment below and update the code to test viewUserById
        //instance.viewUserById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewWhoOwnsRegistrationOrDeviceTokenByToken', function() {
      it('should call viewWhoOwnsRegistrationOrDeviceTokenByToken successfully', function(done) {
        //uncomment below and update the code to test viewWhoOwnsRegistrationOrDeviceTokenByToken
        //instance.viewWhoOwnsRegistrationOrDeviceTokenByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
