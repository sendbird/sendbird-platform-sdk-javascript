/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendbirdPlatformSdk);
  }
}(this, function(expect, SendbirdPlatformSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendbirdPlatformSdk.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('addARegistrationOrDeviceToken', function() {
      it('should call addARegistrationOrDeviceToken successfully', function(done) {
        //uncomment below and update the code to test addARegistrationOrDeviceToken
        //instance.addARegistrationOrDeviceToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('chooseAPushNotificationContentTemplate', function() {
      it('should call chooseAPushNotificationContentTemplate successfully', function(done) {
        //uncomment below and update the code to test chooseAPushNotificationContentTemplate
        //instance.chooseAPushNotificationContentTemplate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAUser', function() {
      it('should call createAUser successfully', function(done) {
        //uncomment below and update the code to test createAUser
        //instance.createAUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUserToken', function() {
      it('should call createUserToken successfully', function(done) {
        //uncomment below and update the code to test createUserToken
        //instance.createUserToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAUser', function() {
      it('should call deleteAUser successfully', function(done) {
        //uncomment below and update the code to test deleteAUser
        //instance.deleteAUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getChannelInvitationPreference', function() {
      it('should call getChannelInvitationPreference successfully', function(done) {
        //uncomment below and update the code to test getChannelInvitationPreference
        //instance.getChannelInvitationPreference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('leaveMyGroupChannels', function() {
      it('should call leaveMyGroupChannels successfully', function(done) {
        //uncomment below and update the code to test leaveMyGroupChannels
        //instance.leaveMyGroupChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMyGroupChannels', function() {
      it('should call listMyGroupChannels successfully', function(done) {
        //uncomment below and update the code to test listMyGroupChannels
        //instance.listMyGroupChannels(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRegistrationOrDeviceTokens', function() {
      it('should call listRegistrationOrDeviceTokens successfully', function(done) {
        //uncomment below and update the code to test listRegistrationOrDeviceTokens
        //instance.listRegistrationOrDeviceTokens(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUsers', function() {
      it('should call listUsers successfully', function(done) {
        //uncomment below and update the code to test listUsers
        //instance.listUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('markAllMessagesAsRead', function() {
      it('should call markAllMessagesAsRead successfully', function(done) {
        //uncomment below and update the code to test markAllMessagesAsRead
        //instance.markAllMessagesAsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeARegistrationOrDeviceToken', function() {
      it('should call removeARegistrationOrDeviceToken successfully', function(done) {
        //uncomment below and update the code to test removeARegistrationOrDeviceToken
        //instance.removeARegistrationOrDeviceToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeARegistrationOrDeviceTokenFromAnOwner', function() {
      it('should call removeARegistrationOrDeviceTokenFromAnOwner successfully', function(done) {
        //uncomment below and update the code to test removeARegistrationOrDeviceTokenFromAnOwner
        //instance.removeARegistrationOrDeviceTokenFromAnOwner(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeAllRegistrationOrDeviceToken', function() {
      it('should call removeAllRegistrationOrDeviceToken successfully', function(done) {
        //uncomment below and update the code to test removeAllRegistrationOrDeviceToken
        //instance.removeAllRegistrationOrDeviceToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetPushPreferences', function() {
      it('should call resetPushPreferences successfully', function(done) {
        //uncomment below and update the code to test resetPushPreferences
        //instance.resetPushPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAUser', function() {
      it('should call updateAUser successfully', function(done) {
        //uncomment below and update the code to test updateAUser
        //instance.updateAUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateChannelInvitationPreference', function() {
      it('should call updateChannelInvitationPreference successfully', function(done) {
        //uncomment below and update the code to test updateChannelInvitationPreference
        //instance.updateChannelInvitationPreference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCountPreferenceOfAChannel', function() {
      it('should call updateCountPreferenceOfAChannel successfully', function(done) {
        //uncomment below and update the code to test updateCountPreferenceOfAChannel
        //instance.updateCountPreferenceOfAChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePushPreferences', function() {
      it('should call updatePushPreferences successfully', function(done) {
        //uncomment below and update the code to test updatePushPreferences
        //instance.updatePushPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePushPreferencesForAChannel', function() {
      it('should call updatePushPreferencesForAChannel successfully', function(done) {
        //uncomment below and update the code to test updatePushPreferencesForAChannel
        //instance.updatePushPreferencesForAChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewAUser', function() {
      it('should call viewAUser successfully', function(done) {
        //uncomment below and update the code to test viewAUser
        //instance.viewAUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewCountPreferenceOfAChannel', function() {
      it('should call viewCountPreferenceOfAChannel successfully', function(done) {
        //uncomment below and update the code to test viewCountPreferenceOfAChannel
        //instance.viewCountPreferenceOfAChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewNumberOfChannelsWithUnreadMessages', function() {
      it('should call viewNumberOfChannelsWithUnreadMessages successfully', function(done) {
        //uncomment below and update the code to test viewNumberOfChannelsWithUnreadMessages
        //instance.viewNumberOfChannelsWithUnreadMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewNumberOfUnreadMessages', function() {
      it('should call viewNumberOfUnreadMessages successfully', function(done) {
        //uncomment below and update the code to test viewNumberOfUnreadMessages
        //instance.viewNumberOfUnreadMessages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewPushPreferences', function() {
      it('should call viewPushPreferences successfully', function(done) {
        //uncomment below and update the code to test viewPushPreferences
        //instance.viewPushPreferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewPushPreferencesForAChannel', function() {
      it('should call viewPushPreferencesForAChannel successfully', function(done) {
        //uncomment below and update the code to test viewPushPreferencesForAChannel
        //instance.viewPushPreferencesForAChannel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('viewWhoOwnsARegistrationOrDeviceToken', function() {
      it('should call viewWhoOwnsARegistrationOrDeviceToken successfully', function(done) {
        //uncomment below and update the code to test viewWhoOwnsARegistrationOrDeviceToken
        //instance.viewWhoOwnsARegistrationOrDeviceToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
