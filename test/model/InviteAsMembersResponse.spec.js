/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendbirdPlatformSdk);
  }
}(this, function(expect, SendbirdPlatformSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InviteAsMembersResponse', function() {
    it('should create an instance of InviteAsMembersResponse', function() {
      // uncomment below and update the code to test InviteAsMembersResponse
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be.a(SendbirdPlatformSdk.InviteAsMembersResponse);
    });

    it('should have the property channelUrl (base name: "channel_url")', function() {
      // uncomment below and update the code to test the property channelUrl
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property countPreference (base name: "count_preference")', function() {
      // uncomment below and update the code to test the property countPreference
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property coverUrl (base name: "cover_url")', function() {
      // uncomment below and update the code to test the property coverUrl
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "created_by")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property customType (base name: "custom_type")', function() {
      // uncomment below and update the code to test the property customType
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property data (base name: "data")', function() {
      // uncomment below and update the code to test the property data
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property deliveryReceipt (base name: "delivery_receipt")', function() {
      // uncomment below and update the code to test the property deliveryReceipt
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property disappearingMessage (base name: "disappearing_message")', function() {
      // uncomment below and update the code to test the property disappearingMessage
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property freeze (base name: "freeze")', function() {
      // uncomment below and update the code to test the property freeze
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasAiBot (base name: "has_ai_bot")', function() {
      // uncomment below and update the code to test the property hasAiBot
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasBot (base name: "has_bot")', function() {
      // uncomment below and update the code to test the property hasBot
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property hiddenState (base name: "hidden_state")', function() {
      // uncomment below and update the code to test the property hiddenState
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property ignoreProfanityFilter (base name: "ignore_profanity_filter")', function() {
      // uncomment below and update the code to test the property ignoreProfanityFilter
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property invitedAt (base name: "invited_at")', function() {
      // uncomment below and update the code to test the property invitedAt
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property inviter (base name: "inviter")', function() {
      // uncomment below and update the code to test the property inviter
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isAccessCodeRequired (base name: "is_access_code_required")', function() {
      // uncomment below and update the code to test the property isAccessCodeRequired
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isBroadcast (base name: "is_broadcast")', function() {
      // uncomment below and update the code to test the property isBroadcast
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isDiscoverable (base name: "is_discoverable")', function() {
      // uncomment below and update the code to test the property isDiscoverable
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isDistinct (base name: "is_distinct")', function() {
      // uncomment below and update the code to test the property isDistinct
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isEphemeral (base name: "is_ephemeral")', function() {
      // uncomment below and update the code to test the property isEphemeral
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isExclusive (base name: "is_exclusive")', function() {
      // uncomment below and update the code to test the property isExclusive
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isHidden (base name: "is_hidden")', function() {
      // uncomment below and update the code to test the property isHidden
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isMuted (base name: "is_muted")', function() {
      // uncomment below and update the code to test the property isMuted
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isPublic (base name: "is_public")', function() {
      // uncomment below and update the code to test the property isPublic
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isPushEnabled (base name: "is_push_enabled")', function() {
      // uncomment below and update the code to test the property isPushEnabled
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property isSuper (base name: "is_super")', function() {
      // uncomment below and update the code to test the property isSuper
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property joinedMemberCount (base name: "joined_member_count")', function() {
      // uncomment below and update the code to test the property joinedMemberCount
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property joinedTs (base name: "joined_ts")', function() {
      // uncomment below and update the code to test the property joinedTs
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property lastMessage (base name: "last_message")', function() {
      // uncomment below and update the code to test the property lastMessage
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property maxLengthMessage (base name: "max_length_message")', function() {
      // uncomment below and update the code to test the property maxLengthMessage
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property memberCount (base name: "member_count")', function() {
      // uncomment below and update the code to test the property memberCount
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property memberState (base name: "member_state")', function() {
      // uncomment below and update the code to test the property memberState
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property members (base name: "members")', function() {
      // uncomment below and update the code to test the property members
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property messageSurvivalSeconds (base name: "message_survival_seconds")', function() {
      // uncomment below and update the code to test the property messageSurvivalSeconds
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property myRole (base name: "my_role")', function() {
      // uncomment below and update the code to test the property myRole
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property pushTriggerOption (base name: "push_trigger_option")', function() {
      // uncomment below and update the code to test the property pushTriggerOption
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property readReceipt (base name: "read_receipt")', function() {
      // uncomment below and update the code to test the property readReceipt
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property smsFallback (base name: "sms_fallback")', function() {
      // uncomment below and update the code to test the property smsFallback
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property tsMessageOffset (base name: "ts_message_offset")', function() {
      // uncomment below and update the code to test the property tsMessageOffset
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property unreadMentionCount (base name: "unread_mention_count")', function() {
      // uncomment below and update the code to test the property unreadMentionCount
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property unreadMessageCount (base name: "unread_message_count")', function() {
      // uncomment below and update the code to test the property unreadMessageCount
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property userLastRead (base name: "user_last_read")', function() {
      // uncomment below and update the code to test the property userLastRead
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

    it('should have the property operators (base name: "operators")', function() {
      // uncomment below and update the code to test the property operators
      //var instance = new SendbirdPlatformSdk.InviteAsMembersResponse();
      //expect(instance).to.be();
    });

  });

}));
