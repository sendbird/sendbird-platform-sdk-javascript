/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SendbirdPlatformSdk);
  }
}(this, function(expect, SendbirdPlatformSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SendBirdSendBirdInstance', function() {
    it('should create an instance of SendBirdSendBirdInstance', function() {
      // uncomment below and update the code to test SendBirdSendBirdInstance
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be.a(SendbirdPlatformSdk.SendBirdSendBirdInstance);
    });

    it('should have the property adminMessage (base name: "AdminMessage")', function() {
      // uncomment below and update the code to test the property adminMessage
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property baseChannel (base name: "BaseChannel")', function() {
      // uncomment below and update the code to test the property baseChannel
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property baseMessage (base name: "BaseMessage")', function() {
      // uncomment below and update the code to test the property baseMessage
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property channelHandler (base name: "ChannelHandler")', function() {
      // uncomment below and update the code to test the property channelHandler
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property collectionEventSource (base name: "CollectionEventSource")', function() {
      // uncomment below and update the code to test the property collectionEventSource
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property connectionHandler (base name: "ConnectionHandler")', function() {
      // uncomment below and update the code to test the property connectionHandler
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property fileMessage (base name: "FileMessage")', function() {
      // uncomment below and update the code to test the property fileMessage
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property fileMessageParams (base name: "FileMessageParams")', function() {
      // uncomment below and update the code to test the property fileMessageParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannel (base name: "GroupChannel")', function() {
      // uncomment below and update the code to test the property groupChannel
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannelChangeLogsParams (base name: "GroupChannelChangeLogsParams")', function() {
      // uncomment below and update the code to test the property groupChannelChangeLogsParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannelCollection (base name: "GroupChannelCollection")', function() {
      // uncomment below and update the code to test the property groupChannelCollection
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannelFilter (base name: "GroupChannelFilter")', function() {
      // uncomment below and update the code to test the property groupChannelFilter
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannelListQuery (base name: "GroupChannelListQuery")', function() {
      // uncomment below and update the code to test the property groupChannelListQuery
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannelParams (base name: "GroupChannelParams")', function() {
      // uncomment below and update the code to test the property groupChannelParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property groupChannelTotalUnreadMessageCountParams (base name: "GroupChannelTotalUnreadMessageCountParams")', function() {
      // uncomment below and update the code to test the property groupChannelTotalUnreadMessageCountParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property member (base name: "Member")', function() {
      // uncomment below and update the code to test the property member
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property messageChangeLogsParams (base name: "MessageChangeLogsParams")', function() {
      // uncomment below and update the code to test the property messageChangeLogsParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property messageCollection (base name: "MessageCollection")', function() {
      // uncomment below and update the code to test the property messageCollection
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property messageFilter (base name: "MessageFilter")', function() {
      // uncomment below and update the code to test the property messageFilter
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property messageListParams (base name: "MessageListParams")', function() {
      // uncomment below and update the code to test the property messageListParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property messageMetaArray (base name: "MessageMetaArray")', function() {
      // uncomment below and update the code to test the property messageMetaArray
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property messageRetrievalParams (base name: "MessageRetrievalParams")', function() {
      // uncomment below and update the code to test the property messageRetrievalParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property openChannel (base name: "OpenChannel")', function() {
      // uncomment below and update the code to test the property openChannel
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property openChannelParams (base name: "OpenChannelParams")', function() {
      // uncomment below and update the code to test the property openChannelParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property options (base name: "Options")', function() {
      // uncomment below and update the code to test the property options
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property poll (base name: "Poll")', function() {
      // uncomment below and update the code to test the property poll
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property pollListQuery (base name: "PollListQuery")', function() {
      // uncomment below and update the code to test the property pollListQuery
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property pollOption (base name: "PollOption")', function() {
      // uncomment below and update the code to test the property pollOption
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property pollParams (base name: "PollParams")', function() {
      // uncomment below and update the code to test the property pollParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property pollRetrievalParams (base name: "PollRetrievalParams")', function() {
      // uncomment below and update the code to test the property pollRetrievalParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property pollVoterListQuery (base name: "PollVoterListQuery")', function() {
      // uncomment below and update the code to test the property pollVoterListQuery
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property restrictedUser (base name: "RestrictedUser")', function() {
      // uncomment below and update the code to test the property restrictedUser
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property scheduledUserMessageParams (base name: "ScheduledUserMessageParams")', function() {
      // uncomment below and update the code to test the property scheduledUserMessageParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property sessionHandler (base name: "SessionHandler")', function() {
      // uncomment below and update the code to test the property sessionHandler
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property threadedMessageListParams (base name: "ThreadedMessageListParams")', function() {
      // uncomment below and update the code to test the property threadedMessageListParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "User")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property userEventHandler (base name: "UserEventHandler")', function() {
      // uncomment below and update the code to test the property userEventHandler
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property userMessage (base name: "UserMessage")', function() {
      // uncomment below and update the code to test the property userMessage
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property userMessageParams (base name: "UserMessageParams")', function() {
      // uncomment below and update the code to test the property userMessageParams
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property appInfo (base name: "appInfo")', function() {
      // uncomment below and update the code to test the property appInfo
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property currentUser (base name: "currentUser")', function() {
      // uncomment below and update the code to test the property currentUser
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

    it('should have the property ekey (base name: "ekey")', function() {
      // uncomment below and update the code to test the property ekey
      //var instance = new SendbirdPlatformSdk.SendBirdSendBirdInstance();
      //expect(instance).to.be();
    });

  });

}));
