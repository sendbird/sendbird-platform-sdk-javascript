/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LeaveAChannelRequest model module.
 * @module model/LeaveAChannelRequest
 * @version 2.1.1
 */
class LeaveAChannelRequest {
    /**
     * Constructs a new <code>LeaveAChannelRequest</code>.
     * @alias module:model/LeaveAChannelRequest
     * @param userIds {Array.<String>} Specifies an array of one or more IDs of the users to leave the channel.
     */
    constructor(userIds) { 
        
        LeaveAChannelRequest.initialize(this, userIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, userIds) { 
        obj['user_ids'] = userIds;
    }

    /**
     * Constructs a <code>LeaveAChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LeaveAChannelRequest} obj Optional instance to populate.
     * @return {module:model/LeaveAChannelRequest} The populated <code>LeaveAChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeaveAChannelRequest();

            if (data.hasOwnProperty('user_ids')) {
                obj['user_ids'] = ApiClient.convertToType(data['user_ids'], ['String']);
            }
            if (data.hasOwnProperty('should_leave_all')) {
                obj['should_leave_all'] = ApiClient.convertToType(data['should_leave_all'], 'Boolean');
            }
            if (data.hasOwnProperty('should_remove_operator_status')) {
                obj['should_remove_operator_status'] = ApiClient.convertToType(data['should_remove_operator_status'], 'Boolean');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Specifies an array of one or more IDs of the users to leave the channel.
 * @member {Array.<String>} user_ids
 */
LeaveAChannelRequest.prototype['user_ids'] = undefined;

/**
 * Determines whether to make all members leave the channel. (Default: false)
 * @member {Boolean} should_leave_all
 */
LeaveAChannelRequest.prototype['should_leave_all'] = undefined;

/**
 * Determines whether to remove a user from the channel's operator list if the user who is leaving the channel is an operator. (Default: false)
 * @member {Boolean} should_remove_operator_status
 */
LeaveAChannelRequest.prototype['should_remove_operator_status'] = undefined;

/**
 * Specifies the reason for leaving a channel. Acceptable values are admin_removed, admin_deleted, admin_deactivated, left_by_own_choice, and channel_operator_removed.
 * @member {module:model/LeaveAChannelRequest.ReasonEnum} reason
 */
LeaveAChannelRequest.prototype['reason'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
LeaveAChannelRequest['ReasonEnum'] = {

    /**
     * value: "LEFT_BY_OWN_CHOICE"
     * @const
     */
    "LEFT_BY_OWN_CHOICE": "LEFT_BY_OWN_CHOICE",

    /**
     * value: "CHANNEL_OPERATOR_REMOVED"
     * @const
     */
    "CHANNEL_OPERATOR_REMOVED": "CHANNEL_OPERATOR_REMOVED",

    /**
     * value: "ADMIN_REMOVED"
     * @const
     */
    "ADMIN_REMOVED": "ADMIN_REMOVED",

    /**
     * value: "ADMIN_DELETED"
     * @const
     */
    "ADMIN_DELETED": "ADMIN_DELETED",

    /**
     * value: "ADMIN_DEACTIVATED"
     * @const
     */
    "ADMIN_DEACTIVATED": "ADMIN_DEACTIVATED"
};



export default LeaveAChannelRequest;

