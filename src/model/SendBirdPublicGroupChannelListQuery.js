/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendBirdPublicGroupChannelListQuery model module.
 * @module model/SendBirdPublicGroupChannelListQuery
 * @version 1.0.0
 */
class SendBirdPublicGroupChannelListQuery {
    /**
     * Constructs a new <code>SendBirdPublicGroupChannelListQuery</code>.
     * @alias module:model/SendBirdPublicGroupChannelListQuery
     */
    constructor() { 
        
        SendBirdPublicGroupChannelListQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdPublicGroupChannelListQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdPublicGroupChannelListQuery} obj Optional instance to populate.
     * @return {module:model/SendBirdPublicGroupChannelListQuery} The populated <code>SendBirdPublicGroupChannelListQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdPublicGroupChannelListQuery();

            if (data.hasOwnProperty('channelNameContainsFilter')) {
                obj['channelNameContainsFilter'] = ApiClient.convertToType(data['channelNameContainsFilter'], 'String');
            }
            if (data.hasOwnProperty('channelUrlsFilter')) {
                obj['channelUrlsFilter'] = ApiClient.convertToType(data['channelUrlsFilter'], ['String']);
            }
            if (data.hasOwnProperty('customTypeStartsWithFilter')) {
                obj['customTypeStartsWithFilter'] = ApiClient.convertToType(data['customTypeStartsWithFilter'], 'String');
            }
            if (data.hasOwnProperty('customTypesFilter')) {
                obj['customTypesFilter'] = ApiClient.convertToType(data['customTypesFilter'], ['String']);
            }
            if (data.hasOwnProperty('hasNext')) {
                obj['hasNext'] = ApiClient.convertToType(data['hasNext'], 'Boolean');
            }
            if (data.hasOwnProperty('includeEmpty')) {
                obj['includeEmpty'] = ApiClient.convertToType(data['includeEmpty'], 'Boolean');
            }
            if (data.hasOwnProperty('includeFrozen')) {
                obj['includeFrozen'] = ApiClient.convertToType(data['includeFrozen'], 'Boolean');
            }
            if (data.hasOwnProperty('isLoading')) {
                obj['isLoading'] = ApiClient.convertToType(data['isLoading'], 'Boolean');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('membershipFilter')) {
                obj['membershipFilter'] = ApiClient.convertToType(data['membershipFilter'], 'String');
            }
            if (data.hasOwnProperty('metadataKey')) {
                obj['metadataKey'] = ApiClient.convertToType(data['metadataKey'], 'String');
            }
            if (data.hasOwnProperty('metadataOrderKeyFilter')) {
                obj['metadataOrderKeyFilter'] = ApiClient.convertToType(data['metadataOrderKeyFilter'], 'String');
            }
            if (data.hasOwnProperty('metadataValueStartsWith')) {
                obj['metadataValueStartsWith'] = ApiClient.convertToType(data['metadataValueStartsWith'], 'String');
            }
            if (data.hasOwnProperty('metadataValues')) {
                obj['metadataValues'] = ApiClient.convertToType(data['metadataValues'], ['String']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'String');
            }
            if (data.hasOwnProperty('superChannelFilter')) {
                obj['superChannelFilter'] = ApiClient.convertToType(data['superChannelFilter'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} channelNameContainsFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['channelNameContainsFilter'] = undefined;

/**
 * @member {Array.<String>} channelUrlsFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['channelUrlsFilter'] = undefined;

/**
 * @member {String} customTypeStartsWithFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['customTypeStartsWithFilter'] = undefined;

/**
 * @member {Array.<String>} customTypesFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['customTypesFilter'] = undefined;

/**
 * @member {Boolean} hasNext
 */
SendBirdPublicGroupChannelListQuery.prototype['hasNext'] = undefined;

/**
 * @member {Boolean} includeEmpty
 */
SendBirdPublicGroupChannelListQuery.prototype['includeEmpty'] = undefined;

/**
 * @member {Boolean} includeFrozen
 */
SendBirdPublicGroupChannelListQuery.prototype['includeFrozen'] = undefined;

/**
 * @member {Boolean} isLoading
 */
SendBirdPublicGroupChannelListQuery.prototype['isLoading'] = undefined;

/**
 * @member {Number} limit
 */
SendBirdPublicGroupChannelListQuery.prototype['limit'] = undefined;

/**
 * @member {module:model/SendBirdPublicGroupChannelListQuery.MembershipFilterEnum} membershipFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['membershipFilter'] = undefined;

/**
 * @member {String} metadataKey
 */
SendBirdPublicGroupChannelListQuery.prototype['metadataKey'] = undefined;

/**
 * @member {String} metadataOrderKeyFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['metadataOrderKeyFilter'] = undefined;

/**
 * @member {String} metadataValueStartsWith
 */
SendBirdPublicGroupChannelListQuery.prototype['metadataValueStartsWith'] = undefined;

/**
 * @member {Array.<String>} metadataValues
 */
SendBirdPublicGroupChannelListQuery.prototype['metadataValues'] = undefined;

/**
 * @member {module:model/SendBirdPublicGroupChannelListQuery.OrderEnum} order
 */
SendBirdPublicGroupChannelListQuery.prototype['order'] = undefined;

/**
 * @member {module:model/SendBirdPublicGroupChannelListQuery.SuperChannelFilterEnum} superChannelFilter
 */
SendBirdPublicGroupChannelListQuery.prototype['superChannelFilter'] = undefined;





/**
 * Allowed values for the <code>membershipFilter</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdPublicGroupChannelListQuery['MembershipFilterEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "joined"
     * @const
     */
    "joined": "joined"
};


/**
 * Allowed values for the <code>order</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdPublicGroupChannelListQuery['OrderEnum'] = {

    /**
     * value: "channel_name_alphabetical"
     * @const
     */
    "channel_name_alphabetical": "channel_name_alphabetical",

    /**
     * value: "chronological"
     * @const
     */
    "chronological": "chronological",

    /**
     * value: "metadata_value_alphabetical"
     * @const
     */
    "metadata_value_alphabetical": "metadata_value_alphabetical"
};


/**
 * Allowed values for the <code>superChannelFilter</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdPublicGroupChannelListQuery['SuperChannelFilterEnum'] = {

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "broadcast_only"
     * @const
     */
    "broadcast_only": "broadcast_only",

    /**
     * value: "nonsuper"
     * @const
     */
    "nonsuper": "nonsuper",

    /**
     * value: "super"
     * @const
     */
    "super": "super"
};



export default SendBirdPublicGroupChannelListQuery;

