/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SendBirdPollOption from './SendBirdPollOption';

/**
 * The SendBirdPollDetails model module.
 * @module model/SendBirdPollDetails
 * @version 1.0.0
 */
class SendBirdPollDetails {
    /**
     * Constructs a new <code>SendBirdPollDetails</code>.
     * @alias module:model/SendBirdPollDetails
     */
    constructor() { 
        
        SendBirdPollDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdPollDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdPollDetails} obj Optional instance to populate.
     * @return {module:model/SendBirdPollDetails} The populated <code>SendBirdPollDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdPollDetails();

            if (data.hasOwnProperty('allowMultipleVotes')) {
                obj['allowMultipleVotes'] = ApiClient.convertToType(data['allowMultipleVotes'], 'Boolean');
            }
            if (data.hasOwnProperty('allowUserSuggestion')) {
                obj['allowUserSuggestion'] = ApiClient.convertToType(data['allowUserSuggestion'], 'Boolean');
            }
            if (data.hasOwnProperty('closeAt')) {
                obj['closeAt'] = ApiClient.convertToType(data['closeAt'], 'Number');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Number');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('isAnonymous')) {
                obj['isAnonymous'] = ApiClient.convertToType(data['isAnonymous'], 'Boolean');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [SendBirdPollOption]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Number');
            }
            if (data.hasOwnProperty('voterCount')) {
                obj['voterCount'] = ApiClient.convertToType(data['voterCount'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} allowMultipleVotes
 */
SendBirdPollDetails.prototype['allowMultipleVotes'] = undefined;

/**
 * @member {Boolean} allowUserSuggestion
 */
SendBirdPollDetails.prototype['allowUserSuggestion'] = undefined;

/**
 * @member {Number} closeAt
 */
SendBirdPollDetails.prototype['closeAt'] = undefined;

/**
 * @member {Number} createdAt
 */
SendBirdPollDetails.prototype['createdAt'] = undefined;

/**
 * @member {String} createdBy
 */
SendBirdPollDetails.prototype['createdBy'] = undefined;

/**
 * @member {Boolean} isAnonymous
 */
SendBirdPollDetails.prototype['isAnonymous'] = undefined;

/**
 * @member {Array.<module:model/SendBirdPollOption>} options
 */
SendBirdPollDetails.prototype['options'] = undefined;

/**
 * @member {module:model/SendBirdPollDetails.StatusEnum} status
 */
SendBirdPollDetails.prototype['status'] = undefined;

/**
 * @member {Number} updatedAt
 */
SendBirdPollDetails.prototype['updatedAt'] = undefined;

/**
 * @member {Number} voterCount
 */
SendBirdPollDetails.prototype['voterCount'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdPollDetails['StatusEnum'] = {

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed",

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "removed"
     * @const
     */
    "removed": "removed"
};



export default SendBirdPollDetails;

