/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SendBirdPollOption from './SendBirdPollOption';

/**
 * The SendBirdPollDetails model module.
 * @module model/SendBirdPollDetails
 * @version 1.0.7
 */
class SendBirdPollDetails {
    /**
     * Constructs a new <code>SendBirdPollDetails</code>.
     * @alias module:model/SendBirdPollDetails
     */
    constructor() { 
        
        SendBirdPollDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdPollDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdPollDetails} obj Optional instance to populate.
     * @return {module:model/SendBirdPollDetails} The populated <code>SendBirdPollDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdPollDetails();

            if (data.hasOwnProperty('allow_multiple_votes')) {
                obj['allow_multiple_votes'] = ApiClient.convertToType(data['allow_multiple_votes'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_user_suggestion')) {
                obj['allow_user_suggestion'] = ApiClient.convertToType(data['allow_user_suggestion'], 'Boolean');
            }
            if (data.hasOwnProperty('close_at')) {
                obj['close_at'] = ApiClient.convertToType(data['close_at'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('is_anonymous')) {
                obj['is_anonymous'] = ApiClient.convertToType(data['is_anonymous'], 'Boolean');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [SendBirdPollOption]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Number');
            }
            if (data.hasOwnProperty('voter_count')) {
                obj['voter_count'] = ApiClient.convertToType(data['voter_count'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} allow_multiple_votes
 */
SendBirdPollDetails.prototype['allow_multiple_votes'] = undefined;

/**
 * @member {Boolean} allow_user_suggestion
 */
SendBirdPollDetails.prototype['allow_user_suggestion'] = undefined;

/**
 * @member {Number} close_at
 */
SendBirdPollDetails.prototype['close_at'] = undefined;

/**
 * @member {Number} created_at
 */
SendBirdPollDetails.prototype['created_at'] = undefined;

/**
 * @member {String} created_by
 */
SendBirdPollDetails.prototype['created_by'] = undefined;

/**
 * @member {Boolean} is_anonymous
 */
SendBirdPollDetails.prototype['is_anonymous'] = undefined;

/**
 * @member {Array.<module:model/SendBirdPollOption>} options
 */
SendBirdPollDetails.prototype['options'] = undefined;

/**
 * @member {module:model/SendBirdPollDetails.StatusEnum} status
 */
SendBirdPollDetails.prototype['status'] = undefined;

/**
 * @member {Number} updated_at
 */
SendBirdPollDetails.prototype['updated_at'] = undefined;

/**
 * @member {Number} voter_count
 */
SendBirdPollDetails.prototype['voter_count'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdPollDetails['StatusEnum'] = {

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed",

    /**
     * value: "open"
     * @const
     */
    "open": "open",

    /**
     * value: "removed"
     * @const
     */
    "removed": "removed"
};



export default SendBirdPollDetails;

