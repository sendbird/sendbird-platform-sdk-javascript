/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateEmojiCategoryUrlByIdData model module.
 * @module model/UpdateEmojiCategoryUrlByIdData
 * @version 1.0.1
 */
class UpdateEmojiCategoryUrlByIdData {
    /**
     * Constructs a new <code>UpdateEmojiCategoryUrlByIdData</code>.
     * @alias module:model/UpdateEmojiCategoryUrlByIdData
     * @param emojiCategoryId {Number} Specifies the unique ID of the emoji category to update.
     * @param url {String} Specifies the new URL of the emoji category.
     */
    constructor(emojiCategoryId, url) { 
        
        UpdateEmojiCategoryUrlByIdData.initialize(this, emojiCategoryId, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, emojiCategoryId, url) { 
        obj['emoji_category_id'] = emojiCategoryId;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>UpdateEmojiCategoryUrlByIdData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateEmojiCategoryUrlByIdData} obj Optional instance to populate.
     * @return {module:model/UpdateEmojiCategoryUrlByIdData} The populated <code>UpdateEmojiCategoryUrlByIdData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateEmojiCategoryUrlByIdData();

            if (data.hasOwnProperty('emoji_category_id')) {
                obj['emoji_category_id'] = ApiClient.convertToType(data['emoji_category_id'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Specifies the unique ID of the emoji category to update.
 * @member {Number} emoji_category_id
 */
UpdateEmojiCategoryUrlByIdData.prototype['emoji_category_id'] = undefined;

/**
 * Specifies the new URL of the emoji category.
 * @member {String} url
 */
UpdateEmojiCategoryUrlByIdData.prototype['url'] = undefined;






export default UpdateEmojiCategoryUrlByIdData;

