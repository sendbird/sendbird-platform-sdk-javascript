/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendBirdStaticLogLevel model module.
 * @module model/SendBirdStaticLogLevel
 * @version 1.0.0
 */
class SendBirdStaticLogLevel {
    /**
     * Constructs a new <code>SendBirdStaticLogLevel</code>.
     * @alias module:model/SendBirdStaticLogLevel
     */
    constructor() { 
        
        SendBirdStaticLogLevel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdStaticLogLevel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdStaticLogLevel} obj Optional instance to populate.
     * @return {module:model/SendBirdStaticLogLevel} The populated <code>SendBirdStaticLogLevel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdStaticLogLevel();

            if (data.hasOwnProperty('DEBUG')) {
                obj['DEBUG'] = ApiClient.convertToType(data['DEBUG'], 'String');
            }
            if (data.hasOwnProperty('ERROR')) {
                obj['ERROR'] = ApiClient.convertToType(data['ERROR'], 'String');
            }
            if (data.hasOwnProperty('INFO')) {
                obj['INFO'] = ApiClient.convertToType(data['INFO'], 'String');
            }
            if (data.hasOwnProperty('NONE')) {
                obj['NONE'] = ApiClient.convertToType(data['NONE'], 'String');
            }
            if (data.hasOwnProperty('VERBOSE')) {
                obj['VERBOSE'] = ApiClient.convertToType(data['VERBOSE'], 'String');
            }
            if (data.hasOwnProperty('WARN')) {
                obj['WARN'] = ApiClient.convertToType(data['WARN'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SendBirdStaticLogLevel.DEBUGEnum} DEBUG
 */
SendBirdStaticLogLevel.prototype['DEBUG'] = undefined;

/**
 * @member {module:model/SendBirdStaticLogLevel.ERROREnum} ERROR
 */
SendBirdStaticLogLevel.prototype['ERROR'] = undefined;

/**
 * @member {module:model/SendBirdStaticLogLevel.INFOEnum} INFO
 */
SendBirdStaticLogLevel.prototype['INFO'] = undefined;

/**
 * @member {module:model/SendBirdStaticLogLevel.NONEEnum} NONE
 */
SendBirdStaticLogLevel.prototype['NONE'] = undefined;

/**
 * @member {module:model/SendBirdStaticLogLevel.VERBOSEEnum} VERBOSE
 */
SendBirdStaticLogLevel.prototype['VERBOSE'] = undefined;

/**
 * @member {module:model/SendBirdStaticLogLevel.WARNEnum} WARN
 */
SendBirdStaticLogLevel.prototype['WARN'] = undefined;





/**
 * Allowed values for the <code>DEBUG</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdStaticLogLevel['DEBUGEnum'] = {

    /**
     * value: "debug"
     * @const
     */
    "debug": "debug"
};


/**
 * Allowed values for the <code>ERROR</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdStaticLogLevel['ERROREnum'] = {

    /**
     * value: "error"
     * @const
     */
    "error": "error"
};


/**
 * Allowed values for the <code>INFO</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdStaticLogLevel['INFOEnum'] = {

    /**
     * value: "info"
     * @const
     */
    "info": "info"
};


/**
 * Allowed values for the <code>NONE</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdStaticLogLevel['NONEEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};


/**
 * Allowed values for the <code>VERBOSE</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdStaticLogLevel['VERBOSEEnum'] = {

    /**
     * value: "verbose"
     * @const
     */
    "verbose": "verbose"
};


/**
 * Allowed values for the <code>WARN</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdStaticLogLevel['WARNEnum'] = {

    /**
     * value: "warn"
     * @const
     */
    "warn": "warn"
};



export default SendBirdStaticLogLevel;

