/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendBirdAppInfo model module.
 * @module model/SendBirdAppInfo
 * @version 1.0.0
 */
class SendBirdAppInfo {
    /**
     * Constructs a new <code>SendBirdAppInfo</code>.
     * @alias module:model/SendBirdAppInfo
     */
    constructor() { 
        
        SendBirdAppInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdAppInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdAppInfo} obj Optional instance to populate.
     * @return {module:model/SendBirdAppInfo} The populated <code>SendBirdAppInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdAppInfo();

            if (data.hasOwnProperty('applicationAttributes')) {
                obj['applicationAttributes'] = ApiClient.convertToType(data['applicationAttributes'], ['String']);
            }
            if (data.hasOwnProperty('emojiHash')) {
                obj['emojiHash'] = ApiClient.convertToType(data['emojiHash'], 'String');
            }
            if (data.hasOwnProperty('isUsingReaction')) {
                obj['isUsingReaction'] = ApiClient.convertToType(data['isUsingReaction'], 'Boolean');
            }
            if (data.hasOwnProperty('premiumFeatureList')) {
                obj['premiumFeatureList'] = ApiClient.convertToType(data['premiumFeatureList'], ['String']);
            }
            if (data.hasOwnProperty('uploadSizeLimit')) {
                obj['uploadSizeLimit'] = ApiClient.convertToType(data['uploadSizeLimit'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<String>} applicationAttributes
 */
SendBirdAppInfo.prototype['applicationAttributes'] = undefined;

/**
 * @member {String} emojiHash
 */
SendBirdAppInfo.prototype['emojiHash'] = undefined;

/**
 * @member {Boolean} isUsingReaction
 */
SendBirdAppInfo.prototype['isUsingReaction'] = undefined;

/**
 * @member {Array.<String>} premiumFeatureList
 */
SendBirdAppInfo.prototype['premiumFeatureList'] = undefined;

/**
 * @member {Number} uploadSizeLimit
 */
SendBirdAppInfo.prototype['uploadSizeLimit'] = undefined;






export default SendBirdAppInfo;

