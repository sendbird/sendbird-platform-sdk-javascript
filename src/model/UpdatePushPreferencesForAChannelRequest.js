/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdatePushPreferencesForAChannelRequest model module.
 * @module model/UpdatePushPreferencesForAChannelRequest
 * @version 2.1.1
 */
class UpdatePushPreferencesForAChannelRequest {
    /**
     * Constructs a new <code>UpdatePushPreferencesForAChannelRequest</code>.
     * @alias module:model/UpdatePushPreferencesForAChannelRequest
     * @param pushTriggerOption {module:model/UpdatePushPreferencesForAChannelRequest.PushTriggerOptionEnum} The type of notifications trigger applies to group channels when a user is disconnected from Sendbird server. Acceptable values are the following: - default (default): Indicates that a user's notifications trigger setting applies to the specified channel. - all: Indicates that a user receives notifications for all new messages. - mention_only: Indicates that a user only receives notifications for mentioned messages. - off: Indicates that a user doesn't receive any notifications.
     */
    constructor(pushTriggerOption) { 
        
        UpdatePushPreferencesForAChannelRequest.initialize(this, pushTriggerOption);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pushTriggerOption) { 
        obj['push_trigger_option'] = pushTriggerOption;
    }

    /**
     * Constructs a <code>UpdatePushPreferencesForAChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdatePushPreferencesForAChannelRequest} obj Optional instance to populate.
     * @return {module:model/UpdatePushPreferencesForAChannelRequest} The populated <code>UpdatePushPreferencesForAChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdatePushPreferencesForAChannelRequest();

            if (data.hasOwnProperty('push_trigger_option')) {
                obj['push_trigger_option'] = ApiClient.convertToType(data['push_trigger_option'], 'String');
            }
            if (data.hasOwnProperty('push_sound')) {
                obj['push_sound'] = ApiClient.convertToType(data['push_sound'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The type of notifications trigger applies to group channels when a user is disconnected from Sendbird server. Acceptable values are the following: - default (default): Indicates that a user's notifications trigger setting applies to the specified channel. - all: Indicates that a user receives notifications for all new messages. - mention_only: Indicates that a user only receives notifications for mentioned messages. - off: Indicates that a user doesn't receive any notifications.
 * @member {module:model/UpdatePushPreferencesForAChannelRequest.PushTriggerOptionEnum} push_trigger_option
 */
UpdatePushPreferencesForAChannelRequest.prototype['push_trigger_option'] = undefined;

/**
 * @member {String} push_sound
 */
UpdatePushPreferencesForAChannelRequest.prototype['push_sound'] = undefined;





/**
 * Allowed values for the <code>push_trigger_option</code> property.
 * @enum {String}
 * @readonly
 */
UpdatePushPreferencesForAChannelRequest['PushTriggerOptionEnum'] = {

    /**
     * value: "default"
     * @const
     */
    "default": "default",

    /**
     * value: "all"
     * @const
     */
    "all": "all",

    /**
     * value: "mention_only"
     * @const
     */
    "mention_only": "mention_only",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};



export default UpdatePushPreferencesForAChannelRequest;

