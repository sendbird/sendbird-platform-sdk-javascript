/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelObject from './ModelObject';
import SendBirdAdminMessage from './SendBirdAdminMessage';
import SendBirdAppleCriticalAlertOptions from './SendBirdAppleCriticalAlertOptions';
import SendBirdFileMessageParams from './SendBirdFileMessageParams';
import SendBirdMessageMetaArray from './SendBirdMessageMetaArray';
import SendBirdOGMetaData from './SendBirdOGMetaData';
import SendBirdReaction from './SendBirdReaction';
import SendBirdSender from './SendBirdSender';
import SendBirdThreadInfo from './SendBirdThreadInfo';
import SendBirdThumbnailObject from './SendBirdThumbnailObject';
import SendBirdUser from './SendBirdUser';

/**
 * The SendBirdFileMessage model module.
 * @module model/SendBirdFileMessage
 * @version 1.0.0
 */
class SendBirdFileMessage {
    /**
     * Constructs a new <code>SendBirdFileMessage</code>.
     * @alias module:model/SendBirdFileMessage
     */
    constructor() { 
        
        SendBirdFileMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdFileMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdFileMessage} obj Optional instance to populate.
     * @return {module:model/SendBirdFileMessage} The populated <code>SendBirdFileMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdFileMessage();

            if (data.hasOwnProperty('appleCriticalAlertOptions')) {
                obj['appleCriticalAlertOptions'] = SendBirdAppleCriticalAlertOptions.constructFromObject(data['appleCriticalAlertOptions']);
            }
            if (data.hasOwnProperty('channelType')) {
                obj['channelType'] = ApiClient.convertToType(data['channelType'], 'String');
            }
            if (data.hasOwnProperty('channelUrl')) {
                obj['channelUrl'] = ApiClient.convertToType(data['channelUrl'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Number');
            }
            if (data.hasOwnProperty('customType')) {
                obj['customType'] = ApiClient.convertToType(data['customType'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('errorCode')) {
                obj['errorCode'] = ApiClient.convertToType(data['errorCode'], 'Number');
            }
            if (data.hasOwnProperty('isReplyToChannel')) {
                obj['isReplyToChannel'] = ApiClient.convertToType(data['isReplyToChannel'], 'Boolean');
            }
            if (data.hasOwnProperty('mentionType')) {
                obj['mentionType'] = ApiClient.convertToType(data['mentionType'], 'String');
            }
            if (data.hasOwnProperty('mentionedUsers')) {
                obj['mentionedUsers'] = ApiClient.convertToType(data['mentionedUsers'], [SendBirdUser]);
            }
            if (data.hasOwnProperty('messageId')) {
                obj['messageId'] = ApiClient.convertToType(data['messageId'], 'Number');
            }
            if (data.hasOwnProperty('messageParams')) {
                obj['messageParams'] = SendBirdFileMessageParams.constructFromObject(data['messageParams']);
            }
            if (data.hasOwnProperty('messageSurvivalSeconds')) {
                obj['messageSurvivalSeconds'] = ApiClient.convertToType(data['messageSurvivalSeconds'], 'Number');
            }
            if (data.hasOwnProperty('messageType')) {
                obj['messageType'] = ApiClient.convertToType(data['messageType'], 'String');
            }
            if (data.hasOwnProperty('metaArray')) {
                obj['metaArray'] = ModelObject.constructFromObject(data['metaArray']);
            }
            if (data.hasOwnProperty('metaArrays')) {
                obj['metaArrays'] = ApiClient.convertToType(data['metaArrays'], [SendBirdMessageMetaArray]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('ogMetaData')) {
                obj['ogMetaData'] = SendBirdOGMetaData.constructFromObject(data['ogMetaData']);
            }
            if (data.hasOwnProperty('parentMessage')) {
                obj['parentMessage'] = SendBirdAdminMessage.constructFromObject(data['parentMessage']);
            }
            if (data.hasOwnProperty('parentMessageId')) {
                obj['parentMessageId'] = ApiClient.convertToType(data['parentMessageId'], 'Number');
            }
            if (data.hasOwnProperty('parentMessageText')) {
                obj['parentMessageText'] = ApiClient.convertToType(data['parentMessageText'], 'String');
            }
            if (data.hasOwnProperty('plainUrl')) {
                obj['plainUrl'] = ApiClient.convertToType(data['plainUrl'], 'String');
            }
            if (data.hasOwnProperty('reactions')) {
                obj['reactions'] = ApiClient.convertToType(data['reactions'], [SendBirdReaction]);
            }
            if (data.hasOwnProperty('reqId')) {
                obj['reqId'] = ApiClient.convertToType(data['reqId'], 'String');
            }
            if (data.hasOwnProperty('requestState')) {
                obj['requestState'] = ApiClient.convertToType(data['requestState'], 'String');
            }
            if (data.hasOwnProperty('requestedMentionUserIds')) {
                obj['requestedMentionUserIds'] = ApiClient.convertToType(data['requestedMentionUserIds'], ['String']);
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = SendBirdSender.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('sendingStatus')) {
                obj['sendingStatus'] = ApiClient.convertToType(data['sendingStatus'], 'String');
            }
            if (data.hasOwnProperty('silent')) {
                obj['silent'] = ApiClient.convertToType(data['silent'], 'Boolean');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('threadInfo')) {
                obj['threadInfo'] = SendBirdThreadInfo.constructFromObject(data['threadInfo']);
            }
            if (data.hasOwnProperty('thumbnails')) {
                obj['thumbnails'] = ApiClient.convertToType(data['thumbnails'], [SendBirdThumbnailObject]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/SendBirdAppleCriticalAlertOptions} appleCriticalAlertOptions
 */
SendBirdFileMessage.prototype['appleCriticalAlertOptions'] = undefined;

/**
 * @member {String} channelType
 */
SendBirdFileMessage.prototype['channelType'] = undefined;

/**
 * @member {String} channelUrl
 */
SendBirdFileMessage.prototype['channelUrl'] = undefined;

/**
 * @member {Number} createdAt
 */
SendBirdFileMessage.prototype['createdAt'] = undefined;

/**
 * @member {String} customType
 */
SendBirdFileMessage.prototype['customType'] = undefined;

/**
 * @member {String} data
 */
SendBirdFileMessage.prototype['data'] = undefined;

/**
 * @member {Number} errorCode
 */
SendBirdFileMessage.prototype['errorCode'] = undefined;

/**
 * @member {Boolean} isReplyToChannel
 */
SendBirdFileMessage.prototype['isReplyToChannel'] = undefined;

/**
 * @member {String} mentionType
 */
SendBirdFileMessage.prototype['mentionType'] = undefined;

/**
 * @member {Array.<module:model/SendBirdUser>} mentionedUsers
 */
SendBirdFileMessage.prototype['mentionedUsers'] = undefined;

/**
 * @member {Number} messageId
 */
SendBirdFileMessage.prototype['messageId'] = undefined;

/**
 * @member {module:model/SendBirdFileMessageParams} messageParams
 */
SendBirdFileMessage.prototype['messageParams'] = undefined;

/**
 * @member {Number} messageSurvivalSeconds
 */
SendBirdFileMessage.prototype['messageSurvivalSeconds'] = undefined;

/**
 * @member {module:model/SendBirdFileMessage.MessageTypeEnum} messageType
 */
SendBirdFileMessage.prototype['messageType'] = undefined;

/**
 * @member {module:model/ModelObject} metaArray
 */
SendBirdFileMessage.prototype['metaArray'] = undefined;

/**
 * @member {Array.<module:model/SendBirdMessageMetaArray>} metaArrays
 */
SendBirdFileMessage.prototype['metaArrays'] = undefined;

/**
 * @member {String} name
 */
SendBirdFileMessage.prototype['name'] = undefined;

/**
 * @member {module:model/SendBirdOGMetaData} ogMetaData
 */
SendBirdFileMessage.prototype['ogMetaData'] = undefined;

/**
 * @member {module:model/SendBirdAdminMessage} parentMessage
 */
SendBirdFileMessage.prototype['parentMessage'] = undefined;

/**
 * @member {Number} parentMessageId
 */
SendBirdFileMessage.prototype['parentMessageId'] = undefined;

/**
 * @member {String} parentMessageText
 */
SendBirdFileMessage.prototype['parentMessageText'] = undefined;

/**
 * @member {String} plainUrl
 */
SendBirdFileMessage.prototype['plainUrl'] = undefined;

/**
 * @member {Array.<module:model/SendBirdReaction>} reactions
 */
SendBirdFileMessage.prototype['reactions'] = undefined;

/**
 * @member {String} reqId
 */
SendBirdFileMessage.prototype['reqId'] = undefined;

/**
 * @member {module:model/SendBirdFileMessage.RequestStateEnum} requestState
 */
SendBirdFileMessage.prototype['requestState'] = undefined;

/**
 * @member {Array.<String>} requestedMentionUserIds
 */
SendBirdFileMessage.prototype['requestedMentionUserIds'] = undefined;

/**
 * @member {module:model/SendBirdSender} sender
 */
SendBirdFileMessage.prototype['sender'] = undefined;

/**
 * @member {module:model/SendBirdFileMessage.SendingStatusEnum} sendingStatus
 */
SendBirdFileMessage.prototype['sendingStatus'] = undefined;

/**
 * @member {Boolean} silent
 */
SendBirdFileMessage.prototype['silent'] = undefined;

/**
 * @member {Number} size
 */
SendBirdFileMessage.prototype['size'] = undefined;

/**
 * @member {module:model/SendBirdThreadInfo} threadInfo
 */
SendBirdFileMessage.prototype['threadInfo'] = undefined;

/**
 * @member {Array.<module:model/SendBirdThumbnailObject>} thumbnails
 */
SendBirdFileMessage.prototype['thumbnails'] = undefined;

/**
 * @member {String} type
 */
SendBirdFileMessage.prototype['type'] = undefined;

/**
 * @member {Number} updatedAt
 */
SendBirdFileMessage.prototype['updatedAt'] = undefined;

/**
 * @member {String} url
 */
SendBirdFileMessage.prototype['url'] = undefined;





/**
 * Allowed values for the <code>messageType</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdFileMessage['MessageTypeEnum'] = {

    /**
     * value: "file"
     * @const
     */
    "file": "file"
};


/**
 * Allowed values for the <code>requestState</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdFileMessage['RequestStateEnum'] = {

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "succeeded"
     * @const
     */
    "succeeded": "succeeded"
};


/**
 * Allowed values for the <code>sendingStatus</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdFileMessage['SendingStatusEnum'] = {

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "succeeded"
     * @const
     */
    "succeeded": "succeeded"
};



export default SendBirdFileMessage;

