/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelObject from './ModelObject';
import SendBirdRestrictionInfo from './SendBirdRestrictionInfo';

/**
 * The SendBirdMember model module.
 * @module model/SendBirdMember
 * @version 1.0.0
 */
class SendBirdMember {
    /**
     * Constructs a new <code>SendBirdMember</code>.
     * @alias module:model/SendBirdMember
     */
    constructor() { 
        
        SendBirdMember.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdMember</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdMember} obj Optional instance to populate.
     * @return {module:model/SendBirdMember} The populated <code>SendBirdMember</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdMember();

            if (data.hasOwnProperty('connection_status')) {
                obj['connection_status'] = ApiClient.convertToType(data['connection_status'], 'String');
            }
            if (data.hasOwnProperty('friend_discovery_key')) {
                obj['friend_discovery_key'] = ApiClient.convertToType(data['friend_discovery_key'], 'String');
            }
            if (data.hasOwnProperty('friend_name')) {
                obj['friend_name'] = ApiClient.convertToType(data['friend_name'], 'String');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('is_blocked_by_me')) {
                obj['is_blocked_by_me'] = ApiClient.convertToType(data['is_blocked_by_me'], 'Boolean');
            }
            if (data.hasOwnProperty('is_blocking_me')) {
                obj['is_blocking_me'] = ApiClient.convertToType(data['is_blocking_me'], 'Boolean');
            }
            if (data.hasOwnProperty('is_muted')) {
                obj['is_muted'] = ApiClient.convertToType(data['is_muted'], 'Boolean');
            }
            if (data.hasOwnProperty('last_seen_at')) {
                obj['last_seen_at'] = ApiClient.convertToType(data['last_seen_at'], 'Number');
            }
            if (data.hasOwnProperty('meta_data')) {
                obj['meta_data'] = ModelObject.constructFromObject(data['meta_data']);
            }
            if (data.hasOwnProperty('nickname')) {
                obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
            }
            if (data.hasOwnProperty('plain_profile_url')) {
                obj['plain_profile_url'] = ApiClient.convertToType(data['plain_profile_url'], 'String');
            }
            if (data.hasOwnProperty('preferred_languages')) {
                obj['preferred_languages'] = ApiClient.convertToType(data['preferred_languages'], ['String']);
            }
            if (data.hasOwnProperty('profile_url')) {
                obj['profile_url'] = ApiClient.convertToType(data['profile_url'], 'String');
            }
            if (data.hasOwnProperty('require_auth')) {
                obj['require_auth'] = ApiClient.convertToType(data['require_auth'], 'Boolean');
            }
            if (data.hasOwnProperty('restriction_info')) {
                obj['restriction_info'] = SendBirdRestrictionInfo.constructFromObject(data['restriction_info']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} connection_status
 */
SendBirdMember.prototype['connection_status'] = undefined;

/**
 * @member {String} friend_discovery_key
 */
SendBirdMember.prototype['friend_discovery_key'] = undefined;

/**
 * @member {String} friend_name
 */
SendBirdMember.prototype['friend_name'] = undefined;

/**
 * @member {Boolean} is_active
 */
SendBirdMember.prototype['is_active'] = undefined;

/**
 * @member {Boolean} is_blocked_by_me
 */
SendBirdMember.prototype['is_blocked_by_me'] = undefined;

/**
 * @member {Boolean} is_blocking_me
 */
SendBirdMember.prototype['is_blocking_me'] = undefined;

/**
 * @member {Boolean} is_muted
 */
SendBirdMember.prototype['is_muted'] = undefined;

/**
 * @member {Number} last_seen_at
 */
SendBirdMember.prototype['last_seen_at'] = undefined;

/**
 * @member {module:model/ModelObject} meta_data
 */
SendBirdMember.prototype['meta_data'] = undefined;

/**
 * @member {String} nickname
 */
SendBirdMember.prototype['nickname'] = undefined;

/**
 * @member {String} plain_profile_url
 */
SendBirdMember.prototype['plain_profile_url'] = undefined;

/**
 * @member {Array.<String>} preferred_languages
 */
SendBirdMember.prototype['preferred_languages'] = undefined;

/**
 * @member {String} profile_url
 */
SendBirdMember.prototype['profile_url'] = undefined;

/**
 * @member {Boolean} require_auth
 */
SendBirdMember.prototype['require_auth'] = undefined;

/**
 * @member {module:model/SendBirdRestrictionInfo} restriction_info
 */
SendBirdMember.prototype['restriction_info'] = undefined;

/**
 * @member {module:model/SendBirdMember.RoleEnum} role
 */
SendBirdMember.prototype['role'] = undefined;

/**
 * @member {module:model/SendBirdMember.StateEnum} state
 */
SendBirdMember.prototype['state'] = undefined;

/**
 * @member {String} user_id
 */
SendBirdMember.prototype['user_id'] = undefined;





/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdMember['RoleEnum'] = {

    /**
     * value: "none"
     * @const
     */
    "none": "none",

    /**
     * value: "operator"
     * @const
     */
    "operator": "operator"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdMember['StateEnum'] = {

    /**
     * value: "invited"
     * @const
     */
    "invited": "invited",

    /**
     * value: "joined"
     * @const
     */
    "joined": "joined"
};



export default SendBirdMember;

