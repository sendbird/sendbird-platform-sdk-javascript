/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendbirdUser model module.
 * @module model/SendbirdUser
 * @version 2.1.1
 */
class SendbirdUser {
    /**
     * Constructs a new <code>SendbirdUser</code>.
     * User
     * @alias module:model/SendbirdUser
     * @param userId {String} 
     */
    constructor(userId) { 
        
        SendbirdUser.initialize(this, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, userId) { 
        obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>SendbirdUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendbirdUser} obj Optional instance to populate.
     * @return {module:model/SendbirdUser} The populated <code>SendbirdUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendbirdUser();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('discovery_keys')) {
                obj['discovery_keys'] = ApiClient.convertToType(data['discovery_keys'], ['String']);
            }
            if (data.hasOwnProperty('has_ever_logged_in')) {
                obj['has_ever_logged_in'] = ApiClient.convertToType(data['has_ever_logged_in'], 'Boolean');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('is_hide_me_from_friends')) {
                obj['is_hide_me_from_friends'] = ApiClient.convertToType(data['is_hide_me_from_friends'], 'Boolean');
            }
            if (data.hasOwnProperty('is_online')) {
                obj['is_online'] = ApiClient.convertToType(data['is_online'], 'Boolean');
            }
            if (data.hasOwnProperty('is_shadow_blocked')) {
                obj['is_shadow_blocked'] = ApiClient.convertToType(data['is_shadow_blocked'], 'Boolean');
            }
            if (data.hasOwnProperty('last_seen_at')) {
                obj['last_seen_at'] = ApiClient.convertToType(data['last_seen_at'], 'Number');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('nickname')) {
                obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
            }
            if (data.hasOwnProperty('preferred_languages')) {
                obj['preferred_languages'] = ApiClient.convertToType(data['preferred_languages'], ['String']);
            }
            if (data.hasOwnProperty('profile_url')) {
                obj['profile_url'] = ApiClient.convertToType(data['profile_url'], 'String');
            }
            if (data.hasOwnProperty('require_auth_for_profile_image')) {
                obj['require_auth_for_profile_image'] = ApiClient.convertToType(data['require_auth_for_profile_image'], 'Boolean');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('unread_channel_count')) {
                obj['unread_channel_count'] = ApiClient.convertToType(data['unread_channel_count'], 'Number');
            }
            if (data.hasOwnProperty('unread_message_count')) {
                obj['unread_message_count'] = ApiClient.convertToType(data['unread_message_count'], 'Number');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('is_created')) {
                obj['is_created'] = ApiClient.convertToType(data['is_created'], 'Boolean');
            }
            if (data.hasOwnProperty('session_tokens')) {
                obj['session_tokens'] = ApiClient.convertToType(data['session_tokens'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} access_token
 */
SendbirdUser.prototype['access_token'] = undefined;

/**
 * @member {Number} created_at
 */
SendbirdUser.prototype['created_at'] = undefined;

/**
 * @member {Array.<String>} discovery_keys
 */
SendbirdUser.prototype['discovery_keys'] = undefined;

/**
 * @member {Boolean} has_ever_logged_in
 */
SendbirdUser.prototype['has_ever_logged_in'] = undefined;

/**
 * @member {Boolean} is_active
 */
SendbirdUser.prototype['is_active'] = undefined;

/**
 * @member {Boolean} is_hide_me_from_friends
 */
SendbirdUser.prototype['is_hide_me_from_friends'] = undefined;

/**
 * @member {Boolean} is_online
 */
SendbirdUser.prototype['is_online'] = undefined;

/**
 * @member {Boolean} is_shadow_blocked
 */
SendbirdUser.prototype['is_shadow_blocked'] = undefined;

/**
 * @member {Number} last_seen_at
 */
SendbirdUser.prototype['last_seen_at'] = undefined;

/**
 * @member {String} locale
 */
SendbirdUser.prototype['locale'] = undefined;

/**
 * @member {Object} metadata
 */
SendbirdUser.prototype['metadata'] = undefined;

/**
 * @member {String} nickname
 */
SendbirdUser.prototype['nickname'] = undefined;

/**
 * @member {Array.<String>} preferred_languages
 */
SendbirdUser.prototype['preferred_languages'] = undefined;

/**
 * @member {String} profile_url
 */
SendbirdUser.prototype['profile_url'] = undefined;

/**
 * @member {Boolean} require_auth_for_profile_image
 */
SendbirdUser.prototype['require_auth_for_profile_image'] = undefined;

/**
 * @member {String} user_id
 */
SendbirdUser.prototype['user_id'] = undefined;

/**
 * @member {module:model/SendbirdUser.StateEnum} state
 */
SendbirdUser.prototype['state'] = undefined;

/**
 * @member {Number} unread_channel_count
 */
SendbirdUser.prototype['unread_channel_count'] = undefined;

/**
 * @member {Number} unread_message_count
 */
SendbirdUser.prototype['unread_message_count'] = undefined;

/**
 * @member {String} phone_number
 */
SendbirdUser.prototype['phone_number'] = undefined;

/**
 * @member {Boolean} is_created
 */
SendbirdUser.prototype['is_created'] = undefined;

/**
 * @member {Array.<String>} session_tokens
 */
SendbirdUser.prototype['session_tokens'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
SendbirdUser['StateEnum'] = {

    /**
     * value: ""
     * @const
     */
    "empty": "",

    /**
     * value: "invited"
     * @const
     */
    "invited": "invited",

    /**
     * value: "joined"
     * @const
     */
    "joined": "joined"
};



export default SendbirdUser;

