/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SendBirdPreviousMessageListQuery model module.
 * @module model/SendBirdPreviousMessageListQuery
 * @version 1.0.0
 */
class SendBirdPreviousMessageListQuery {
    /**
     * Constructs a new <code>SendBirdPreviousMessageListQuery</code>.
     * @alias module:model/SendBirdPreviousMessageListQuery
     */
    constructor() { 
        
        SendBirdPreviousMessageListQuery.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SendBirdPreviousMessageListQuery</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendBirdPreviousMessageListQuery} obj Optional instance to populate.
     * @return {module:model/SendBirdPreviousMessageListQuery} The populated <code>SendBirdPreviousMessageListQuery</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendBirdPreviousMessageListQuery();

            if (data.hasOwnProperty('customTypeFilter')) {
                obj['customTypeFilter'] = ApiClient.convertToType(data['customTypeFilter'], 'String');
            }
            if (data.hasOwnProperty('customTypesFilter')) {
                obj['customTypesFilter'] = ApiClient.convertToType(data['customTypesFilter'], 'String');
            }
            if (data.hasOwnProperty('hasMore')) {
                obj['hasMore'] = ApiClient.convertToType(data['hasMore'], 'Boolean');
            }
            if (data.hasOwnProperty('includeMetaArray')) {
                obj['includeMetaArray'] = ApiClient.convertToType(data['includeMetaArray'], 'Boolean');
            }
            if (data.hasOwnProperty('includeParentMessageText')) {
                obj['includeParentMessageText'] = ApiClient.convertToType(data['includeParentMessageText'], 'Boolean');
            }
            if (data.hasOwnProperty('includePollDetails')) {
                obj['includePollDetails'] = ApiClient.convertToType(data['includePollDetails'], 'Boolean');
            }
            if (data.hasOwnProperty('includeReaction')) {
                obj['includeReaction'] = ApiClient.convertToType(data['includeReaction'], 'Boolean');
            }
            if (data.hasOwnProperty('includeReactions')) {
                obj['includeReactions'] = ApiClient.convertToType(data['includeReactions'], 'Boolean');
            }
            if (data.hasOwnProperty('includeReplies')) {
                obj['includeReplies'] = ApiClient.convertToType(data['includeReplies'], 'Boolean');
            }
            if (data.hasOwnProperty('includeThreadInfo')) {
                obj['includeThreadInfo'] = ApiClient.convertToType(data['includeThreadInfo'], 'Boolean');
            }
            if (data.hasOwnProperty('isLoading')) {
                obj['isLoading'] = ApiClient.convertToType(data['isLoading'], 'Boolean');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('messageTypeFilter')) {
                obj['messageTypeFilter'] = ApiClient.convertToType(data['messageTypeFilter'], 'String');
            }
            if (data.hasOwnProperty('reverse')) {
                obj['reverse'] = ApiClient.convertToType(data['reverse'], 'Boolean');
            }
            if (data.hasOwnProperty('senderUserIdsFilter')) {
                obj['senderUserIdsFilter'] = ApiClient.convertToType(data['senderUserIdsFilter'], ['String']);
            }
            if (data.hasOwnProperty('showSubchannelMessagesOnly')) {
                obj['showSubchannelMessagesOnly'] = ApiClient.convertToType(data['showSubchannelMessagesOnly'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} customTypeFilter
 */
SendBirdPreviousMessageListQuery.prototype['customTypeFilter'] = undefined;

/**
 * @member {String} customTypesFilter
 */
SendBirdPreviousMessageListQuery.prototype['customTypesFilter'] = undefined;

/**
 * @member {Boolean} hasMore
 */
SendBirdPreviousMessageListQuery.prototype['hasMore'] = undefined;

/**
 * @member {Boolean} includeMetaArray
 */
SendBirdPreviousMessageListQuery.prototype['includeMetaArray'] = undefined;

/**
 * @member {Boolean} includeParentMessageText
 */
SendBirdPreviousMessageListQuery.prototype['includeParentMessageText'] = undefined;

/**
 * @member {Boolean} includePollDetails
 */
SendBirdPreviousMessageListQuery.prototype['includePollDetails'] = undefined;

/**
 * @member {Boolean} includeReaction
 */
SendBirdPreviousMessageListQuery.prototype['includeReaction'] = undefined;

/**
 * @member {Boolean} includeReactions
 */
SendBirdPreviousMessageListQuery.prototype['includeReactions'] = undefined;

/**
 * @member {Boolean} includeReplies
 */
SendBirdPreviousMessageListQuery.prototype['includeReplies'] = undefined;

/**
 * @member {Boolean} includeThreadInfo
 */
SendBirdPreviousMessageListQuery.prototype['includeThreadInfo'] = undefined;

/**
 * @member {Boolean} isLoading
 */
SendBirdPreviousMessageListQuery.prototype['isLoading'] = undefined;

/**
 * @member {Number} limit
 */
SendBirdPreviousMessageListQuery.prototype['limit'] = undefined;

/**
 * @member {module:model/SendBirdPreviousMessageListQuery.MessageTypeFilterEnum} messageTypeFilter
 */
SendBirdPreviousMessageListQuery.prototype['messageTypeFilter'] = undefined;

/**
 * @member {Boolean} reverse
 */
SendBirdPreviousMessageListQuery.prototype['reverse'] = undefined;

/**
 * @member {Array.<String>} senderUserIdsFilter
 */
SendBirdPreviousMessageListQuery.prototype['senderUserIdsFilter'] = undefined;

/**
 * @member {Boolean} showSubchannelMessagesOnly
 */
SendBirdPreviousMessageListQuery.prototype['showSubchannelMessagesOnly'] = undefined;





/**
 * Allowed values for the <code>messageTypeFilter</code> property.
 * @enum {String}
 * @readonly
 */
SendBirdPreviousMessageListQuery['MessageTypeFilterEnum'] = {

    /**
     * value: ""
     * @const
     */
    "empty": "",

    /**
     * value: "0"
     * @const
     */
    "0": "0",

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "2"
     * @const
     */
    "2": "2",

    /**
     * value: "3"
     * @const
     */
    "3": "3",

    /**
     * value: "ADMM"
     * @const
     */
    "ADMM": "ADMM",

    /**
     * value: "FILE"
     * @const
     */
    "FILE": "FILE",

    /**
     * value: "MESG"
     * @const
     */
    "MESG": "MESG"
};



export default SendBirdPreviousMessageListQuery;

