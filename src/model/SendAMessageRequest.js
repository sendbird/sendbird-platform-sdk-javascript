/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SendAdminMessageRequestBody from './SendAdminMessageRequestBody';
import SendFileMessageRequestBody from './SendFileMessageRequestBody';
import SendTextMessageRequestBody from './SendTextMessageRequestBody';
import SendTextMessageRequestBodyPushMessageTemplate from './SendTextMessageRequestBodyPushMessageTemplate';
import SendbirdFile from './SendbirdFile';
import SendbirdSortedMetaarrayInner from './SendbirdSortedMetaarrayInner';

/**
 * The SendAMessageRequest model module.
 * @module model/SendAMessageRequest
 * @version 2.0.0
 */
class SendAMessageRequest {
    /**
     * Constructs a new <code>SendAMessageRequest</code>.
     * @alias module:model/SendAMessageRequest
     * @implements module:model/SendTextMessageRequestBody
     * @implements module:model/SendFileMessageRequestBody
     * @implements module:model/SendAdminMessageRequestBody
     * @param message {String} 
     * @param messageType {module:model/SendAMessageRequest.MessageTypeEnum} Specifies the type of the message. The value of ADMM represents an admin message.
     * @param files {module:model/SendbirdFile} 
     */
    constructor(message, messageType, files) { 
        SendTextMessageRequestBody.initialize(this, message, messageType);SendFileMessageRequestBody.initialize(this, files, messageType);SendAdminMessageRequestBody.initialize(this, message, messageType);
        SendAMessageRequest.initialize(this, message, messageType, files);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, messageType, files) { 
        obj['message'] = message;
        obj['message_type'] = messageType;
        obj['files'] = files;
    }

    /**
     * Constructs a <code>SendAMessageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendAMessageRequest} obj Optional instance to populate.
     * @return {module:model/SendAMessageRequest} The populated <code>SendAMessageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendAMessageRequest();
            SendTextMessageRequestBody.constructFromObject(data, obj);
            SendFileMessageRequestBody.constructFromObject(data, obj);
            SendAdminMessageRequestBody.constructFromObject(data, obj);

            if (data.hasOwnProperty('apns_bundle_id')) {
                obj['apns_bundle_id'] = ApiClient.convertToType(data['apns_bundle_id'], 'String');
            }
            if (data.hasOwnProperty('apple_critical_alert_options')) {
                obj['apple_critical_alert_options'] = ApiClient.convertToType(data['apple_critical_alert_options'], Object);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('custom_type')) {
                obj['custom_type'] = ApiClient.convertToType(data['custom_type'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('dedup_id')) {
                obj['dedup_id'] = ApiClient.convertToType(data['dedup_id'], 'String');
            }
            if (data.hasOwnProperty('include_poll_details')) {
                obj['include_poll_details'] = ApiClient.convertToType(data['include_poll_details'], 'Boolean');
            }
            if (data.hasOwnProperty('is_silent')) {
                obj['is_silent'] = ApiClient.convertToType(data['is_silent'], 'Boolean');
            }
            if (data.hasOwnProperty('mark_as_read')) {
                obj['mark_as_read'] = ApiClient.convertToType(data['mark_as_read'], 'Boolean');
            }
            if (data.hasOwnProperty('mention_type')) {
                obj['mention_type'] = ApiClient.convertToType(data['mention_type'], 'String');
            }
            if (data.hasOwnProperty('mentioned_user_ids')) {
                obj['mentioned_user_ids'] = ApiClient.convertToType(data['mentioned_user_ids'], ['String']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('message_type')) {
                obj['message_type'] = ApiClient.convertToType(data['message_type'], 'String');
            }
            if (data.hasOwnProperty('poll_id')) {
                obj['poll_id'] = ApiClient.convertToType(data['poll_id'], 'Number');
            }
            if (data.hasOwnProperty('push_message_template')) {
                obj['push_message_template'] = SendTextMessageRequestBodyPushMessageTemplate.constructFromObject(data['push_message_template']);
            }
            if (data.hasOwnProperty('send_push')) {
                obj['send_push'] = ApiClient.convertToType(data['send_push'], 'Boolean');
            }
            if (data.hasOwnProperty('sorted_metaarray')) {
                obj['sorted_metaarray'] = ApiClient.convertToType(data['sorted_metaarray'], [SendbirdSortedMetaarrayInner]);
            }
            if (data.hasOwnProperty('sound')) {
                obj['sound'] = ApiClient.convertToType(data['sound'], 'String');
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ApiClient.convertToType(data['volume'], 'Number');
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = SendbirdFile.constructFromObject(data['files']);
            }
            if (data.hasOwnProperty('require_auth')) {
                obj['require_auth'] = ApiClient.convertToType(data['require_auth'], 'Boolean');
            }
            if (data.hasOwnProperty('thumbnail1')) {
                obj['thumbnail1'] = ApiClient.convertToType(data['thumbnail1'], 'String');
            }
            if (data.hasOwnProperty('thumbnail2')) {
                obj['thumbnail2'] = ApiClient.convertToType(data['thumbnail2'], 'String');
            }
            if (data.hasOwnProperty('thumbnail3')) {
                obj['thumbnail3'] = ApiClient.convertToType(data['thumbnail3'], 'String');
            }
            if (data.hasOwnProperty('thumbnails')) {
                obj['thumbnails'] = ApiClient.convertToType(data['thumbnails'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} apns_bundle_id
 */
SendAMessageRequest.prototype['apns_bundle_id'] = undefined;

/**
 * @member {Object} apple_critical_alert_options
 */
SendAMessageRequest.prototype['apple_critical_alert_options'] = undefined;

/**
 * @member {Number} created_at
 */
SendAMessageRequest.prototype['created_at'] = undefined;

/**
 * @member {String} custom_type
 */
SendAMessageRequest.prototype['custom_type'] = undefined;

/**
 * @member {String} data
 */
SendAMessageRequest.prototype['data'] = undefined;

/**
 * @member {String} dedup_id
 */
SendAMessageRequest.prototype['dedup_id'] = undefined;

/**
 * @member {Boolean} include_poll_details
 */
SendAMessageRequest.prototype['include_poll_details'] = undefined;

/**
 * @member {Boolean} is_silent
 */
SendAMessageRequest.prototype['is_silent'] = undefined;

/**
 * @member {Boolean} mark_as_read
 */
SendAMessageRequest.prototype['mark_as_read'] = undefined;

/**
 * @member {module:model/SendAMessageRequest.MentionTypeEnum} mention_type
 */
SendAMessageRequest.prototype['mention_type'] = undefined;

/**
 * @member {Array.<String>} mentioned_user_ids
 */
SendAMessageRequest.prototype['mentioned_user_ids'] = undefined;

/**
 * @member {String} message
 */
SendAMessageRequest.prototype['message'] = undefined;

/**
 * Specifies the type of the message. The value of ADMM represents an admin message.
 * @member {module:model/SendAMessageRequest.MessageTypeEnum} message_type
 */
SendAMessageRequest.prototype['message_type'] = undefined;

/**
 * @member {Number} poll_id
 */
SendAMessageRequest.prototype['poll_id'] = undefined;

/**
 * @member {module:model/SendTextMessageRequestBodyPushMessageTemplate} push_message_template
 */
SendAMessageRequest.prototype['push_message_template'] = undefined;

/**
 * @member {Boolean} send_push
 */
SendAMessageRequest.prototype['send_push'] = undefined;

/**
 * @member {Array.<module:model/SendbirdSortedMetaarrayInner>} sorted_metaarray
 */
SendAMessageRequest.prototype['sorted_metaarray'] = undefined;

/**
 * @member {String} sound
 */
SendAMessageRequest.prototype['sound'] = undefined;

/**
 * @member {Number} volume
 */
SendAMessageRequest.prototype['volume'] = undefined;

/**
 * @member {module:model/SendbirdFile} files
 */
SendAMessageRequest.prototype['files'] = undefined;

/**
 * Determines whether to require an authentication key to verify if the file is being properly accessed. Only the user who uploaded the file or users who are in the channel where the file was uploaded should have access. The authentication key managed internally by the Sendbird system is generated every time a user logs in to the Sendbird server and is valid for three days starting from the last login. If set to false, Sendbird tries to access a file without any key. To access encrypted files, such as the files in the Sendbird server which are by default encrypted, the property must be set to true. (Default: false) The require_auth parameter only works if the file or URL is managed by Sendbird, which means that when you upload files using multipart format or provide URLs that point to the files hosted on the Sendbird server. However, if the file is hosted on a server or service that is not managed by Sendbird, access control and authentication for the file should be handled by the respective server or service hosting the file.
 * @member {Boolean} require_auth
 */
SendAMessageRequest.prototype['require_auth'] = undefined;

/**
 * @member {String} thumbnail1
 */
SendAMessageRequest.prototype['thumbnail1'] = undefined;

/**
 * @member {String} thumbnail2
 */
SendAMessageRequest.prototype['thumbnail2'] = undefined;

/**
 * @member {String} thumbnail3
 */
SendAMessageRequest.prototype['thumbnail3'] = undefined;

/**
 * @member {Array.<String>} thumbnails
 */
SendAMessageRequest.prototype['thumbnails'] = undefined;


// Implement SendTextMessageRequestBody interface:
/**
 * @member {String} apns_bundle_id
 */
SendTextMessageRequestBody.prototype['apns_bundle_id'] = undefined;
/**
 * @member {Object} apple_critical_alert_options
 */
SendTextMessageRequestBody.prototype['apple_critical_alert_options'] = undefined;
/**
 * @member {Number} created_at
 */
SendTextMessageRequestBody.prototype['created_at'] = undefined;
/**
 * @member {String} custom_type
 */
SendTextMessageRequestBody.prototype['custom_type'] = undefined;
/**
 * @member {String} data
 */
SendTextMessageRequestBody.prototype['data'] = undefined;
/**
 * @member {String} dedup_id
 */
SendTextMessageRequestBody.prototype['dedup_id'] = undefined;
/**
 * @member {Boolean} include_poll_details
 */
SendTextMessageRequestBody.prototype['include_poll_details'] = undefined;
/**
 * @member {Boolean} is_silent
 */
SendTextMessageRequestBody.prototype['is_silent'] = undefined;
/**
 * @member {Boolean} mark_as_read
 */
SendTextMessageRequestBody.prototype['mark_as_read'] = undefined;
/**
 * @member {module:model/SendTextMessageRequestBody.MentionTypeEnum} mention_type
 */
SendTextMessageRequestBody.prototype['mention_type'] = undefined;
/**
 * @member {Array.<String>} mentioned_user_ids
 */
SendTextMessageRequestBody.prototype['mentioned_user_ids'] = undefined;
/**
 * @member {String} message
 */
SendTextMessageRequestBody.prototype['message'] = undefined;
/**
 * Specifies the type of the message. The value of MESG represents a text message.
 * @member {module:model/SendTextMessageRequestBody.MessageTypeEnum} message_type
 */
SendTextMessageRequestBody.prototype['message_type'] = undefined;
/**
 * @member {Number} poll_id
 */
SendTextMessageRequestBody.prototype['poll_id'] = undefined;
/**
 * @member {module:model/SendTextMessageRequestBodyPushMessageTemplate} push_message_template
 */
SendTextMessageRequestBody.prototype['push_message_template'] = undefined;
/**
 * @member {Boolean} send_push
 */
SendTextMessageRequestBody.prototype['send_push'] = undefined;
/**
 * @member {Array.<module:model/SendbirdSortedMetaarrayInner>} sorted_metaarray
 */
SendTextMessageRequestBody.prototype['sorted_metaarray'] = undefined;
/**
 * @member {String} sound
 */
SendTextMessageRequestBody.prototype['sound'] = undefined;
/**
 * @member {Number} volume
 */
SendTextMessageRequestBody.prototype['volume'] = undefined;
// Implement SendFileMessageRequestBody interface:
/**
 * @member {String} apns_bundle_id
 */
SendFileMessageRequestBody.prototype['apns_bundle_id'] = undefined;
/**
 * @member {Object} apple_critical_alert_options
 */
SendFileMessageRequestBody.prototype['apple_critical_alert_options'] = undefined;
/**
 * @member {Number} created_at
 */
SendFileMessageRequestBody.prototype['created_at'] = undefined;
/**
 * @member {String} custom_type
 */
SendFileMessageRequestBody.prototype['custom_type'] = undefined;
/**
 * @member {String} data
 */
SendFileMessageRequestBody.prototype['data'] = undefined;
/**
 * @member {String} dedup_id
 */
SendFileMessageRequestBody.prototype['dedup_id'] = undefined;
/**
 * @member {module:model/SendbirdFile} files
 */
SendFileMessageRequestBody.prototype['files'] = undefined;
/**
 * @member {Boolean} is_silent
 */
SendFileMessageRequestBody.prototype['is_silent'] = undefined;
/**
 * @member {Boolean} mark_as_read
 */
SendFileMessageRequestBody.prototype['mark_as_read'] = undefined;
/**
 * @member {module:model/SendFileMessageRequestBody.MentionTypeEnum} mention_type
 */
SendFileMessageRequestBody.prototype['mention_type'] = undefined;
/**
 * @member {Array.<String>} mentioned_user_ids
 */
SendFileMessageRequestBody.prototype['mentioned_user_ids'] = undefined;
/**
 * Specifies the type of the message. The value of FILE represents a file message.
 * @member {module:model/SendFileMessageRequestBody.MessageTypeEnum} message_type
 */
SendFileMessageRequestBody.prototype['message_type'] = undefined;
/**
 * Determines whether to require an authentication key to verify if the file is being properly accessed. Only the user who uploaded the file or users who are in the channel where the file was uploaded should have access. The authentication key managed internally by the Sendbird system is generated every time a user logs in to the Sendbird server and is valid for three days starting from the last login. If set to false, Sendbird tries to access a file without any key. To access encrypted files, such as the files in the Sendbird server which are by default encrypted, the property must be set to true. (Default: false) The require_auth parameter only works if the file or URL is managed by Sendbird, which means that when you upload files using multipart format or provide URLs that point to the files hosted on the Sendbird server. However, if the file is hosted on a server or service that is not managed by Sendbird, access control and authentication for the file should be handled by the respective server or service hosting the file.
 * @member {Boolean} require_auth
 */
SendFileMessageRequestBody.prototype['require_auth'] = undefined;
/**
 * @member {Boolean} send_push
 */
SendFileMessageRequestBody.prototype['send_push'] = undefined;
/**
 * @member {Array.<module:model/SendbirdSortedMetaarrayInner>} sorted_metaarray
 */
SendFileMessageRequestBody.prototype['sorted_metaarray'] = undefined;
/**
 * @member {String} sound
 */
SendFileMessageRequestBody.prototype['sound'] = undefined;
/**
 * @member {String} thumbnail1
 */
SendFileMessageRequestBody.prototype['thumbnail1'] = undefined;
/**
 * @member {String} thumbnail2
 */
SendFileMessageRequestBody.prototype['thumbnail2'] = undefined;
/**
 * @member {String} thumbnail3
 */
SendFileMessageRequestBody.prototype['thumbnail3'] = undefined;
/**
 * @member {Array.<String>} thumbnails
 */
SendFileMessageRequestBody.prototype['thumbnails'] = undefined;
/**
 * @member {Number} volume
 */
SendFileMessageRequestBody.prototype['volume'] = undefined;
// Implement SendAdminMessageRequestBody interface:
/**
 * @member {String} apns_bundle_id
 */
SendAdminMessageRequestBody.prototype['apns_bundle_id'] = undefined;
/**
 * @member {String} custom_type
 */
SendAdminMessageRequestBody.prototype['custom_type'] = undefined;
/**
 * @member {String} data
 */
SendAdminMessageRequestBody.prototype['data'] = undefined;
/**
 * @member {String} dedup_id
 */
SendAdminMessageRequestBody.prototype['dedup_id'] = undefined;
/**
 * @member {Boolean} is_silent
 */
SendAdminMessageRequestBody.prototype['is_silent'] = undefined;
/**
 * @member {module:model/SendAdminMessageRequestBody.MentionTypeEnum} mention_type
 */
SendAdminMessageRequestBody.prototype['mention_type'] = undefined;
/**
 * @member {Array.<String>} mentioned_user_ids
 */
SendAdminMessageRequestBody.prototype['mentioned_user_ids'] = undefined;
/**
 * @member {String} message
 */
SendAdminMessageRequestBody.prototype['message'] = undefined;
/**
 * Specifies the type of the message. The value of ADMM represents an admin message.
 * @member {module:model/SendAdminMessageRequestBody.MessageTypeEnum} message_type
 */
SendAdminMessageRequestBody.prototype['message_type'] = undefined;
/**
 * @member {module:model/SendTextMessageRequestBodyPushMessageTemplate} push_message_template
 */
SendAdminMessageRequestBody.prototype['push_message_template'] = undefined;
/**
 * @member {Boolean} send_push
 */
SendAdminMessageRequestBody.prototype['send_push'] = undefined;
/**
 * @member {Array.<module:model/SendbirdSortedMetaarrayInner>} sorted_metaarray
 */
SendAdminMessageRequestBody.prototype['sorted_metaarray'] = undefined;



/**
 * Allowed values for the <code>mention_type</code> property.
 * @enum {String}
 * @readonly
 */
SendAMessageRequest['MentionTypeEnum'] = {

    /**
     * value: "users"
     * @const
     */
    "users": "users",

    /**
     * value: "channel"
     * @const
     */
    "channel": "channel"
};


/**
 * Allowed values for the <code>message_type</code> property.
 * @enum {String}
 * @readonly
 */
SendAMessageRequest['MessageTypeEnum'] = {

    /**
     * value: "ADMM"
     * @const
     */
    "ADMM": "ADMM"
};



export default SendAMessageRequest;

