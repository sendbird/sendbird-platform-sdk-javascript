/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  [https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api](https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api)  Contact Support:   Name: Sendbird   Email: [support@sendbird.com](https://mailto:support@sendbird.com)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SendbirdUser from './SendbirdUser';

/**
 * The CreateAGroupChannelRequest model module.
 * @module model/CreateAGroupChannelRequest
 * @version 2.1.1
 */
class CreateAGroupChannelRequest {
    /**
     * Constructs a new <code>CreateAGroupChannelRequest</code>.
     * @alias module:model/CreateAGroupChannelRequest
     * @param users {Array.<module:model/SendbirdUser>} 
     */
    constructor(users) { 
        
        CreateAGroupChannelRequest.initialize(this, users);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, users) { 
        obj['users'] = users;
    }

    /**
     * Constructs a <code>CreateAGroupChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAGroupChannelRequest} obj Optional instance to populate.
     * @return {module:model/CreateAGroupChannelRequest} The populated <code>CreateAGroupChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAGroupChannelRequest();

            if (data.hasOwnProperty('access_code')) {
                obj['access_code'] = ApiClient.convertToType(data['access_code'], 'String');
            }
            if (data.hasOwnProperty('block_sdk_user_channel_join')) {
                obj['block_sdk_user_channel_join'] = ApiClient.convertToType(data['block_sdk_user_channel_join'], 'Boolean');
            }
            if (data.hasOwnProperty('channel_url')) {
                obj['channel_url'] = ApiClient.convertToType(data['channel_url'], 'String');
            }
            if (data.hasOwnProperty('cover_file')) {
                obj['cover_file'] = ApiClient.convertToType(data['cover_file'], File);
            }
            if (data.hasOwnProperty('cover_url')) {
                obj['cover_url'] = ApiClient.convertToType(data['cover_url'], 'String');
            }
            if (data.hasOwnProperty('custom_type')) {
                obj['custom_type'] = ApiClient.convertToType(data['custom_type'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('hidden_status')) {
                obj['hidden_status'] = ApiClient.convertToType(data['hidden_status'], Object);
            }
            if (data.hasOwnProperty('invitation_status')) {
                obj['invitation_status'] = ApiClient.convertToType(data['invitation_status'], Object);
            }
            if (data.hasOwnProperty('inviter_id')) {
                obj['inviter_id'] = ApiClient.convertToType(data['inviter_id'], 'String');
            }
            if (data.hasOwnProperty('is_distinct')) {
                obj['is_distinct'] = ApiClient.convertToType(data['is_distinct'], 'Boolean');
            }
            if (data.hasOwnProperty('is_ephemeral')) {
                obj['is_ephemeral'] = ApiClient.convertToType(data['is_ephemeral'], 'Boolean');
            }
            if (data.hasOwnProperty('is_public')) {
                obj['is_public'] = ApiClient.convertToType(data['is_public'], 'Boolean');
            }
            if (data.hasOwnProperty('is_super')) {
                obj['is_super'] = ApiClient.convertToType(data['is_super'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operator_ids')) {
                obj['operator_ids'] = ApiClient.convertToType(data['operator_ids'], ['String']);
            }
            if (data.hasOwnProperty('strict')) {
                obj['strict'] = ApiClient.convertToType(data['strict'], 'Boolean');
            }
            if (data.hasOwnProperty('user_ids')) {
                obj['user_ids'] = ApiClient.convertToType(data['user_ids'], ['String']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [SendbirdUser]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} access_code
 */
CreateAGroupChannelRequest.prototype['access_code'] = undefined;

/**
 * @member {Boolean} block_sdk_user_channel_join
 */
CreateAGroupChannelRequest.prototype['block_sdk_user_channel_join'] = undefined;

/**
 * @member {String} channel_url
 */
CreateAGroupChannelRequest.prototype['channel_url'] = undefined;

/**
 * Uploads a file for the channel cover image.
 * @member {File} cover_file
 */
CreateAGroupChannelRequest.prototype['cover_file'] = undefined;

/**
 * @member {String} cover_url
 */
CreateAGroupChannelRequest.prototype['cover_url'] = undefined;

/**
 * @member {String} custom_type
 */
CreateAGroupChannelRequest.prototype['custom_type'] = undefined;

/**
 * @member {String} data
 */
CreateAGroupChannelRequest.prototype['data'] = undefined;

/**
 * Specifies one or more key-value pair items which set the channel's hidden status for each user. The key should be a user_id and the value should be their hidden status. Acceptable values are limited to the following:<br />- unhidden (default): the channel is included in when retrieving a list of group channels.<br />- hidden_allow_auto_unhide: the channel automatically gets unhidden when receiving a new message.<br />- hidden_prevent_auto_unhide: the channel keeps hidden though receiving a new message.
 * @member {Object} hidden_status
 */
CreateAGroupChannelRequest.prototype['hidden_status'] = undefined;

/**
 * Specifies one or more key-value pair items which set the invitation status of each user invited to the channel. The key should be a user_id and the value should be their joining status. Acceptable values are joined, invited_by_friend, and invited_by_non_friend. (Default: joined)
 * @member {Object} invitation_status
 */
CreateAGroupChannelRequest.prototype['invitation_status'] = undefined;

/**
 * @member {String} inviter_id
 */
CreateAGroupChannelRequest.prototype['inviter_id'] = undefined;

/**
 * @member {Boolean} is_distinct
 */
CreateAGroupChannelRequest.prototype['is_distinct'] = undefined;

/**
 * @member {Boolean} is_ephemeral
 */
CreateAGroupChannelRequest.prototype['is_ephemeral'] = undefined;

/**
 * @member {Boolean} is_public
 */
CreateAGroupChannelRequest.prototype['is_public'] = undefined;

/**
 * @member {Boolean} is_super
 */
CreateAGroupChannelRequest.prototype['is_super'] = undefined;

/**
 * @member {String} name
 */
CreateAGroupChannelRequest.prototype['name'] = undefined;

/**
 * @member {Array.<String>} operator_ids
 */
CreateAGroupChannelRequest.prototype['operator_ids'] = undefined;

/**
 * @member {Boolean} strict
 */
CreateAGroupChannelRequest.prototype['strict'] = undefined;

/**
 * @member {Array.<String>} user_ids
 */
CreateAGroupChannelRequest.prototype['user_ids'] = undefined;

/**
 * @member {Array.<module:model/SendbirdUser>} users
 */
CreateAGroupChannelRequest.prototype['users'] = undefined;






export default CreateAGroupChannelRequest;

