/**
 * Sendbird Platform SDK
 * Sendbird Platform API Javascript SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineResponse200 from '../model/InlineResponse200';

/**
* Applications service.
* @module api/ApplicationsApi
* @version 1.0.1
*/
export default class ApplicationsApi {

    /**
    * Constructs a new ApplicationsApi. 
    * @alias module:api/ApplicationsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * List muted users in channels with a custom channel type
     * ## Retrieves a list of the muted users in channels with a custom channel type.
     * @param {String} apiToken 
     * @param {String} customType 
     * @param {Object} opts Optional parameters
     * @param {String} opts.token 
     * @param {Number} opts.limit 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InlineResponse200} and HTTP response
     */
    v3ApplicationsSettingsByChannelCustomTypeCustomTypeMuteGetWithHttpInfo(apiToken, customType, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiToken' is set
      if (apiToken === undefined || apiToken === null) {
        throw new Error("Missing the required parameter 'apiToken' when calling v3ApplicationsSettingsByChannelCustomTypeCustomTypeMuteGet");
      }
      // verify the required parameter 'customType' is set
      if (customType === undefined || customType === null) {
        throw new Error("Missing the required parameter 'customType' when calling v3ApplicationsSettingsByChannelCustomTypeCustomTypeMuteGet");
      }

      let pathParams = {
        'custom_type': customType
      };
      let queryParams = {
        'token': opts['token'],
        'limit': opts['limit']
      };
      let headerParams = {
        'Api-Token': apiToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/v3/applications/settings_by_channel_custom_type/{custom_type}/mute', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List muted users in channels with a custom channel type
     * ## Retrieves a list of the muted users in channels with a custom channel type.
     * @param {String} apiToken 
     * @param {String} customType 
     * @param {Object} opts Optional parameters
     * @param {String} opts.token 
     * @param {Number} opts.limit 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InlineResponse200}
     */
    v3ApplicationsSettingsByChannelCustomTypeCustomTypeMuteGet(apiToken, customType, opts) {
      return this.v3ApplicationsSettingsByChannelCustomTypeCustomTypeMuteGetWithHttpInfo(apiToken, customType, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
