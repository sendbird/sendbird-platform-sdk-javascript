/**
 * Sendbird Platform SDK
 * Sendbird Platform API SDK  https://sendbird.com/docs/chat/v3/platform-api/getting-started/prepare-to-use-api
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendbird.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RetrieveAdvancedAnalyticsMetricsResponse from '../model/RetrieveAdvancedAnalyticsMetricsResponse';
import ViewNumberOfConcurrentConnectionsResponse from '../model/ViewNumberOfConcurrentConnectionsResponse';
import ViewNumberOfDailyActiveUsersResponse from '../model/ViewNumberOfDailyActiveUsersResponse';
import ViewNumberOfMonthlyActiveUsersResponse from '../model/ViewNumberOfMonthlyActiveUsersResponse';
import ViewNumberOfPeakConnectionsResponse from '../model/ViewNumberOfPeakConnectionsResponse';

/**
* Statistics service.
* @module api/StatisticsApi
* @version 0.0.13
*/
export default class StatisticsApi {

    /**
    * Constructs a new StatisticsApi. 
    * @alias module:api/StatisticsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieve Advanced analytics metrics
     * ## Retrieve Advanced analytics metrics  Retrieves Advanced analytics metrics based on the specified parameters. You can retrieve either daily or monthly metrics using the time_dimension parameter.  >__Note__: Daily metrics are calculated and updated every three hours, starting at 1 a.m. in UTC. Meanwhile, monthly metrics are calculated after the last day of the month.  https://sendbird.com/docs/chat/v3/platform-api/guides/advanced-analytics#2-retrieve-advanced-analytics-metrics ----------------------------
     * @param {String} apiToken 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RetrieveAdvancedAnalyticsMetricsResponse} and HTTP response
     */
    retrieveAdvancedAnalyticsMetricsWithHttpInfo(apiToken) {
      let postBody = null;
      // verify the required parameter 'apiToken' is set
      if (apiToken === undefined || apiToken === null) {
        throw new Error("Missing the required parameter 'apiToken' when calling retrieveAdvancedAnalyticsMetrics");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Api-Token': apiToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RetrieveAdvancedAnalyticsMetricsResponse;
      return this.apiClient.callApi(
        '/v3/statistics/metric', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve Advanced analytics metrics
     * ## Retrieve Advanced analytics metrics  Retrieves Advanced analytics metrics based on the specified parameters. You can retrieve either daily or monthly metrics using the time_dimension parameter.  >__Note__: Daily metrics are calculated and updated every three hours, starting at 1 a.m. in UTC. Meanwhile, monthly metrics are calculated after the last day of the month.  https://sendbird.com/docs/chat/v3/platform-api/guides/advanced-analytics#2-retrieve-advanced-analytics-metrics ----------------------------
     * @param {String} apiToken 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RetrieveAdvancedAnalyticsMetricsResponse}
     */
    retrieveAdvancedAnalyticsMetrics(apiToken) {
      return this.retrieveAdvancedAnalyticsMetricsWithHttpInfo(apiToken)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * View number of concurrent connections
     * ## View number of concurrent connections  Retrieves the number of devices and opened browser tabs which are currently connected to Sendbird server.  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-concurrent-connections
     * @param {String} apiToken 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ViewNumberOfConcurrentConnectionsResponse} and HTTP response
     */
    viewNumberOfConcurrentConnectionsWithHttpInfo(apiToken) {
      let postBody = null;
      // verify the required parameter 'apiToken' is set
      if (apiToken === undefined || apiToken === null) {
        throw new Error("Missing the required parameter 'apiToken' when calling viewNumberOfConcurrentConnections");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Api-Token': apiToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ViewNumberOfConcurrentConnectionsResponse;
      return this.apiClient.callApi(
        '/v3/applications/ccu', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * View number of concurrent connections
     * ## View number of concurrent connections  Retrieves the number of devices and opened browser tabs which are currently connected to Sendbird server.  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-concurrent-connections
     * @param {String} apiToken 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ViewNumberOfConcurrentConnectionsResponse}
     */
    viewNumberOfConcurrentConnections(apiToken) {
      return this.viewNumberOfConcurrentConnectionsWithHttpInfo(apiToken)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * View number of daily active users
     * ## View number of daily active users  Retrieves the number of daily active users of the application (DAU).  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-daily-active-users ----------------------------
     * @param {String} apiToken 
     * @param {Object} opts Optional parameters
     * @param {String} opts.date 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ViewNumberOfDailyActiveUsersResponse} and HTTP response
     */
    viewNumberOfDailyActiveUsersWithHttpInfo(apiToken, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiToken' is set
      if (apiToken === undefined || apiToken === null) {
        throw new Error("Missing the required parameter 'apiToken' when calling viewNumberOfDailyActiveUsers");
      }

      let pathParams = {
      };
      let queryParams = {
        'date': opts['date']
      };
      let headerParams = {
        'Api-Token': apiToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ViewNumberOfDailyActiveUsersResponse;
      return this.apiClient.callApi(
        '/v3/applications/dau', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * View number of daily active users
     * ## View number of daily active users  Retrieves the number of daily active users of the application (DAU).  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-daily-active-users ----------------------------
     * @param {String} apiToken 
     * @param {Object} opts Optional parameters
     * @param {String} opts.date 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ViewNumberOfDailyActiveUsersResponse}
     */
    viewNumberOfDailyActiveUsers(apiToken, opts) {
      return this.viewNumberOfDailyActiveUsersWithHttpInfo(apiToken, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * View number of monthly active users
     * ## View number of monthly active users  Retrieves the number of monthly active users of the application (MAU).  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-monthly-active-users ----------------------------
     * @param {String} apiToken 
     * @param {Object} opts Optional parameters
     * @param {String} opts.date 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ViewNumberOfMonthlyActiveUsersResponse} and HTTP response
     */
    viewNumberOfMonthlyActiveUsersWithHttpInfo(apiToken, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiToken' is set
      if (apiToken === undefined || apiToken === null) {
        throw new Error("Missing the required parameter 'apiToken' when calling viewNumberOfMonthlyActiveUsers");
      }

      let pathParams = {
      };
      let queryParams = {
        'date': opts['date']
      };
      let headerParams = {
        'Api-Token': apiToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ViewNumberOfMonthlyActiveUsersResponse;
      return this.apiClient.callApi(
        '/v3/applications/mau', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * View number of monthly active users
     * ## View number of monthly active users  Retrieves the number of monthly active users of the application (MAU).  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-monthly-active-users ----------------------------
     * @param {String} apiToken 
     * @param {Object} opts Optional parameters
     * @param {String} opts.date 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ViewNumberOfMonthlyActiveUsersResponse}
     */
    viewNumberOfMonthlyActiveUsers(apiToken, opts) {
      return this.viewNumberOfMonthlyActiveUsersWithHttpInfo(apiToken, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * View number of peak connections
     * ## View number of peak connections  Retrieves the number of concurrently connected devices to Sendbird server during the requested time period.  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-peak-connections ----------------------------
     * @param {String} apiToken 
     * @param {String} timeDimension 
     * @param {Number} startYear 
     * @param {Number} startMonth 
     * @param {Number} endYear 
     * @param {Number} endMonth 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startDay 
     * @param {Number} opts.endDay 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ViewNumberOfPeakConnectionsResponse} and HTTP response
     */
    viewNumberOfPeakConnectionsWithHttpInfo(apiToken, timeDimension, startYear, startMonth, endYear, endMonth, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiToken' is set
      if (apiToken === undefined || apiToken === null) {
        throw new Error("Missing the required parameter 'apiToken' when calling viewNumberOfPeakConnections");
      }
      // verify the required parameter 'timeDimension' is set
      if (timeDimension === undefined || timeDimension === null) {
        throw new Error("Missing the required parameter 'timeDimension' when calling viewNumberOfPeakConnections");
      }
      // verify the required parameter 'startYear' is set
      if (startYear === undefined || startYear === null) {
        throw new Error("Missing the required parameter 'startYear' when calling viewNumberOfPeakConnections");
      }
      // verify the required parameter 'startMonth' is set
      if (startMonth === undefined || startMonth === null) {
        throw new Error("Missing the required parameter 'startMonth' when calling viewNumberOfPeakConnections");
      }
      // verify the required parameter 'endYear' is set
      if (endYear === undefined || endYear === null) {
        throw new Error("Missing the required parameter 'endYear' when calling viewNumberOfPeakConnections");
      }
      // verify the required parameter 'endMonth' is set
      if (endMonth === undefined || endMonth === null) {
        throw new Error("Missing the required parameter 'endMonth' when calling viewNumberOfPeakConnections");
      }

      let pathParams = {
      };
      let queryParams = {
        'time_dimension': timeDimension,
        'start_year': startYear,
        'start_month': startMonth,
        'end_year': endYear,
        'end_month': endMonth,
        'start_day': opts['startDay'],
        'end_day': opts['endDay']
      };
      let headerParams = {
        'Api-Token': apiToken
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ViewNumberOfPeakConnectionsResponse;
      return this.apiClient.callApi(
        '/v3/applications/peak_connections', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * View number of peak connections
     * ## View number of peak connections  Retrieves the number of concurrently connected devices to Sendbird server during the requested time period.  https://sendbird.com/docs/chat/v3/platform-api/guides/application#2-view-number-of-peak-connections ----------------------------
     * @param {String} apiToken 
     * @param {String} timeDimension 
     * @param {Number} startYear 
     * @param {Number} startMonth 
     * @param {Number} endYear 
     * @param {Number} endMonth 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.startDay 
     * @param {Number} opts.endDay 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ViewNumberOfPeakConnectionsResponse}
     */
    viewNumberOfPeakConnections(apiToken, timeDimension, startYear, startMonth, endYear, endMonth, opts) {
      return this.viewNumberOfPeakConnectionsWithHttpInfo(apiToken, timeDimension, startYear, startMonth, endYear, endMonth, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
